{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"encoding_rs","disambiguator":[8720806649305147386,9637546125168665111]},"crate_root":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.7.2/src","external_crates":[{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.7.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11381577622635992493,17547473659604595133]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.7.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18108793355192929380,16468545247463735764]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.7.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11904953375042280309,14371983540252725821]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.7.2/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[1355694319277426326,16064730418872223952]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.7.2/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[16554292665456805706,897773524803637406]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.7.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9247162154814293369,8568939183132890470]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.7.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10008762999642871283,544601977840758240]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.7.2/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[15792583605743683862,4433965399607837619]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.7.2/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[10940074420694136997,2824510269351905908]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.7.2/src/lib.rs","num":10,"id":{"name":"cfg_if","disambiguator":[3481485811283563287,1219190027583985416]}}],"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":424,"byte_end":225754,"line_start":10,"line_end":5054,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":424,"byte_end":225754,"line_start":10,"line_end":5054,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.7.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":40},{"krate":0,"index":80},{"krate":0,"index":138},{"krate":0,"index":186},{"krate":0,"index":222},{"krate":0,"index":266},{"krate":0,"index":310},{"krate":0,"index":348},{"krate":0,"index":388},{"krate":0,"index":410},{"krate":0,"index":440},{"krate":0,"index":462},{"krate":0,"index":498},{"krate":0,"index":880},{"krate":0,"index":1108},{"krate":0,"index":1170},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1276},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1300},{"krate":0,"index":1302},{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":1308},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1332},{"krate":0,"index":1334},{"krate":0,"index":1336},{"krate":0,"index":1338},{"krate":0,"index":1340},{"krate":0,"index":1342},{"krate":0,"index":1344},{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1390},{"krate":0,"index":1392},{"krate":0,"index":1394},{"krate":0,"index":1396},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1406},{"krate":0,"index":1408},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":1420},{"krate":0,"index":1422},{"krate":0,"index":1424},{"krate":0,"index":1426},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1432},{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1484},{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1494},{"krate":0,"index":1732},{"krate":0,"index":1738},{"krate":0,"index":1734},{"krate":0,"index":1498},{"krate":0,"index":1742},{"krate":0,"index":1752},{"krate":0,"index":1748},{"krate":0,"index":1744},{"krate":0,"index":1756},{"krate":0,"index":1768},{"krate":0,"index":1762},{"krate":0,"index":1758},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1792},{"krate":0,"index":1804},{"krate":0,"index":1798},{"krate":0,"index":1794},{"krate":0,"index":1526},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1560},{"krate":0,"index":1562},{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1572},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1584}],"decl_id":null,"docs":" encoding_rs is a Gecko-oriented Free Software / Open Source implementation\n of the [Encoding Standard](https://encoding.spec.whatwg.org/) in Rust.\n Gecko-oriented means that converting to and from UTF-16 is supported in\n addition to converting to and from UTF-8, that the performance and\n streamability goals are browser-oriented, and that FFI-friendliness is a\n goal.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1170},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mem","qualname":"::mem","value":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/encoding_rs-0.7.2/src/mem.rs","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":1188},{"krate":0,"index":1702},{"krate":0,"index":1704},{"krate":0,"index":1714},{"krate":0,"index":1710},{"krate":0,"index":1706},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1720},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1718},{"krate":0,"index":1196},{"krate":0,"index":1726},{"krate":0,"index":1198},{"krate":0,"index":1728},{"krate":0,"index":1730},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1210},{"krate":0,"index":1212},{"krate":0,"index":1214},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1252}],"decl_id":null,"docs":" Functions for converting between different in-RAM representations of text\n and for quickly checking if the Unicode Bidirectional Algorithm can be\n avoided.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":739},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2142626,"byte_end":2142632,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Latin1","qualname":"::mem::Latin1Bidi::Latin1","value":"Latin1Bidi::Latin1","parent":{"krate":0,"index":1704},"children":[],"decl_id":null,"docs":" Every character is below U+0100.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":743},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2142758,"byte_end":2142769,"line_start":57,"line_end":57,"column_start":5,"column_end":16},"name":"LeftToRight","qualname":"::mem::Latin1Bidi::LeftToRight","value":"Latin1Bidi::LeftToRight","parent":{"krate":0,"index":1704},"children":[],"decl_id":null,"docs":" There is at least one character that's U+0100 or higher, but there\n are no right-to-left characters.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":747},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2142834,"byte_end":2142838,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"Bidi","qualname":"::mem::Latin1Bidi::Bidi","value":"Latin1Bidi::Bidi","parent":{"krate":0,"index":1704},"children":[],"decl_id":null,"docs":" There is at least one right-to-left character.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1704},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2142568,"byte_end":2142578,"line_start":52,"line_end":52,"column_start":10,"column_end":20},"name":"Latin1Bidi","qualname":"::mem::Latin1Bidi","value":"Latin1Bidi::{Latin1, LeftToRight, Bidi}","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":743},{"krate":0,"index":747}],"decl_id":null,"docs":" Classification of text as Latin1 (all code points are below U+0100),\n left-to-right with some non-Latin1 characters or as containing at least\n some right-to-left characters.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2142504,"byte_end":2142515,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"repr(C)","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2142548,"byte_end":2142558,"line_start":51,"line_end":51,"column_start":1,"column_end":11}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2142559,"byte_end":2142845,"line_start":52,"line_end":60,"column_start":1,"column_end":2}}]},{"kind":"Function","id":{"krate":0,"index":1200},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2165409,"byte_end":2165417,"line_start":607,"line_end":607,"column_start":8,"column_end":16},"name":"is_ascii","qualname":"::mem::is_ascii","value":"fn (buffer: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer is all-ASCII.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2165392,"byte_end":2165401,"line_start":606,"line_end":606,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1202},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2165711,"byte_end":2165725,"line_start":617,"line_end":617,"column_start":8,"column_end":22},"name":"is_basic_latin","qualname":"::mem::is_basic_latin","value":"fn (buffer: &[u16]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer is all-Basic Latin (i.e. UTF-16 representing\n only ASCII characters).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2165694,"byte_end":2165703,"line_start":616,"line_end":616,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1204},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2166051,"byte_end":2166065,"line_start":627,"line_end":627,"column_start":8,"column_end":22},"name":"is_utf8_latin1","qualname":"::mem::is_utf8_latin1","value":"fn (buffer: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer is valid UTF-8 representing only code points\n less than or equal to U+00FF.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2166034,"byte_end":2166043,"line_start":626,"line_end":626,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1206},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2166362,"byte_end":2166375,"line_start":637,"line_end":637,"column_start":8,"column_end":21},"name":"is_str_latin1","qualname":"::mem::is_str_latin1","value":"fn (buffer: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer represents only code point less than or equal\n to U+00FF.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2166345,"byte_end":2166354,"line_start":636,"line_end":636,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1208},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2166672,"byte_end":2166687,"line_start":647,"line_end":647,"column_start":8,"column_end":23},"name":"is_utf16_latin1","qualname":"::mem::is_utf16_latin1","value":"fn (buffer: &[u16]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer represents only code point less than or equal\n to U+00FF.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2166655,"byte_end":2166664,"line_start":646,"line_end":646,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1210},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2167481,"byte_end":2167493,"line_start":665,"line_end":665,"column_start":8,"column_end":20},"name":"is_utf8_bidi","qualname":"::mem::is_utf8_bidi","value":"fn (buffer: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a potentially-invalid UTF-8 buffer contains code points\n that trigger right-to-left processing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2167464,"byte_end":2167473,"line_start":664,"line_end":664,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1212},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2185286,"byte_end":2185297,"line_start":1062,"line_end":1062,"column_start":8,"column_end":19},"name":"is_str_bidi","qualname":"::mem::is_str_bidi","value":"fn (buffer: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a valid UTF-8 buffer contains code points that trigger\n right-to-left processing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2185269,"byte_end":2185278,"line_start":1061,"line_end":1061,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1214},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2191573,"byte_end":2191586,"line_start":1214,"line_end":1214,"column_start":8,"column_end":21},"name":"is_utf16_bidi","qualname":"::mem::is_utf16_bidi","value":"fn (buffer: &[u16]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a UTF-16 buffer contains code points that trigger\n right-to-left processing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2191556,"byte_end":2191565,"line_start":1213,"line_end":1213,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1216},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2192158,"byte_end":2192170,"line_start":1227,"line_end":1227,"column_start":8,"column_end":20},"name":"is_char_bidi","qualname":"::mem::is_char_bidi","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a code point triggers right-to-left processing.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2192133,"byte_end":2192150,"line_start":1226,"line_end":1226,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1218},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2194754,"byte_end":2194777,"line_start":1296,"line_end":1296,"column_start":8,"column_end":31},"name":"is_utf16_code_unit_bidi","qualname":"::mem::is_utf16_code_unit_bidi","value":"fn (u: u16) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a UTF-16 code unit triggers right-to-left processing.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2194729,"byte_end":2194746,"line_start":1295,"line_end":1295,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1220},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2196127,"byte_end":2196157,"line_start":1338,"line_end":1338,"column_start":8,"column_end":38},"name":"check_utf8_for_latin1_and_bidi","qualname":"::mem::check_utf8_for_latin1_and_bidi","value":"fn (buffer: &[u8]) -> Latin1Bidi","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a potentially invalid UTF-8 buffer contains code points\n that trigger right-to-left processing or is all-Latin1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2196110,"byte_end":2196119,"line_start":1337,"line_end":1337,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1222},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2196851,"byte_end":2196880,"line_start":1359,"line_end":1359,"column_start":8,"column_end":37},"name":"check_str_for_latin1_and_bidi","qualname":"::mem::check_str_for_latin1_and_bidi","value":"fn (buffer: &str) -> Latin1Bidi","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a valid UTF-8 buffer contains code points\n that trigger right-to-left processing or is all-Latin1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2196834,"byte_end":2196843,"line_start":1358,"line_end":1358,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1224},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2197714,"byte_end":2197745,"line_start":1382,"line_end":1382,"column_start":8,"column_end":39},"name":"check_utf16_for_latin1_and_bidi","qualname":"::mem::check_utf16_for_latin1_and_bidi","value":"fn (buffer: &[u16]) -> Latin1Bidi","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a potentially invalid UTF-16 buffer contains code points\n that trigger right-to-left processing or is all-Latin1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2197697,"byte_end":2197706,"line_start":1381,"line_end":1381,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1226},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2198203,"byte_end":2198224,"line_start":1398,"line_end":1398,"column_start":8,"column_end":29},"name":"convert_utf8_to_utf16","qualname":"::mem::convert_utf8_to_utf16","value":"fn (src: &[u8], dst: &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-8 to valid UTF-16 with errors replaced\n with the REPLACEMENT CHARACTER.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2198186,"byte_end":2198195,"line_start":1397,"line_end":1397,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1228},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2199531,"byte_end":2199551,"line_start":1437,"line_end":1437,"column_start":8,"column_end":28},"name":"convert_str_to_utf16","qualname":"::mem::convert_str_to_utf16","value":"fn (src: &str, dst: &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts valid UTF-8 to valid UTF-16.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2199514,"byte_end":2199523,"line_start":1436,"line_end":1436,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1230},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2203611,"byte_end":2203632,"line_start":1543,"line_end":1543,"column_start":8,"column_end":29},"name":"convert_utf16_to_utf8","qualname":"::mem::convert_utf16_to_utf8","value":"fn (src: &[u16], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2203594,"byte_end":2203603,"line_start":1542,"line_end":1542,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1232},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2204366,"byte_end":2204386,"line_start":1564,"line_end":1564,"column_start":8,"column_end":28},"name":"convert_utf16_to_str","qualname":"::mem::convert_utf16_to_str","value":"fn (src: &[u16], dst: &mut str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER such that the validity of the output is\n signaled using the Rust type system.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2204349,"byte_end":2204358,"line_start":1563,"line_end":1563,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1234},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2205268,"byte_end":2205291,"line_start":1593,"line_end":1593,"column_start":8,"column_end":31},"name":"convert_latin1_to_utf16","qualname":"::mem::convert_latin1_to_utf16","value":"fn (src: &[u8], dst: &mut [u16]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-16.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2205251,"byte_end":2205260,"line_start":1592,"line_end":1592,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1236},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2206391,"byte_end":2206413,"line_start":1625,"line_end":1625,"column_start":8,"column_end":30},"name":"convert_latin1_to_utf8","qualname":"::mem::convert_latin1_to_utf8","value":"fn (src: &[u8], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2206374,"byte_end":2206383,"line_start":1624,"line_end":1624,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1238},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2208012,"byte_end":2208033,"line_start":1673,"line_end":1673,"column_start":8,"column_end":29},"name":"convert_latin1_to_str","qualname":"::mem::convert_latin1_to_str","value":"fn (src: &[u8], dst: &mut str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8 such that the validity of the\n output is signaled using the Rust type system.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2207995,"byte_end":2208004,"line_start":1672,"line_end":1672,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1240},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2209363,"byte_end":2209391,"line_start":1710,"line_end":1710,"column_start":8,"column_end":36},"name":"convert_utf8_to_latin1_lossy","qualname":"::mem::convert_utf8_to_latin1_lossy","value":"fn (src: &[u8], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" If the input is valid UTF-8 representing only Unicode code points from\n U+0000 to U+00FF, inclusive, converts the input into output that\n represents the value of each code point as the unsigned byte value of\n each output byte.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2209346,"byte_end":2209355,"line_start":1709,"line_end":1709,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1242},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2211476,"byte_end":2211505,"line_start":1770,"line_end":1770,"column_start":8,"column_end":37},"name":"convert_utf16_to_latin1_lossy","qualname":"::mem::convert_utf16_to_latin1_lossy","value":"fn (src: &[u16], dst: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" If the input is valid UTF-16 representing only Unicode code points from\n U+0000 to U+00FF, inclusive, converts the input into output that\n represents the value of each code point as the unsigned byte value of\n each output byte.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2211459,"byte_end":2211468,"line_start":1769,"line_end":1769,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1244},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2211884,"byte_end":2211901,"line_start":1783,"line_end":1783,"column_start":8,"column_end":25},"name":"utf16_valid_up_to","qualname":"::mem::utf16_valid_up_to","value":"fn (buffer: &[u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the first unpaired surrogate or, if the input is\n valid UTF-16 in its entirety, the length of the input.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2211867,"byte_end":2211876,"line_start":1782,"line_end":1782,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1246},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2212062,"byte_end":2212083,"line_start":1789,"line_end":1789,"column_start":8,"column_end":29},"name":"ensure_utf16_validity","qualname":"::mem::ensure_utf16_validity","value":"fn (buffer: &mut [u16]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces unpaired surrogates in the input with the REPLACEMENT CHARACTER.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2212045,"byte_end":2212054,"line_start":1788,"line_end":1788,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1248},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2212712,"byte_end":2212731,"line_start":1813,"line_end":1813,"column_start":8,"column_end":27},"name":"copy_ascii_to_ascii","qualname":"::mem::copy_ascii_to_ascii","value":"fn (src: &[u8], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copies ASCII from source to destination up to the first non-ASCII byte\n (or the end of the input if it is ASCII in its entirety).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2212695,"byte_end":2212704,"line_start":1812,"line_end":1812,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1250},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2213470,"byte_end":2213495,"line_start":1839,"line_end":1839,"column_start":8,"column_end":33},"name":"copy_ascii_to_basic_latin","qualname":"::mem::copy_ascii_to_basic_latin","value":"fn (src: &[u8], dst: &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copies ASCII from source to destination zero-extending it to UTF-16 up to\n the first non-ASCII byte (or the end of the input if it is ASCII in its\n entirety).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2213453,"byte_end":2213462,"line_start":1838,"line_end":1838,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1252},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2214257,"byte_end":2214282,"line_start":1865,"line_end":1865,"column_start":8,"column_end":33},"name":"copy_basic_latin_to_ascii","qualname":"::mem::copy_basic_latin_to_ascii","value":"fn (src: &[u16], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copies Basic Latin from source to destination narrowing it to ASCII up to\n the first non-Basic Latin code unit (or the end of the input if it is\n Basic Latin in its entirety).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,109,101,109,46,114,115],"byte_start":2214240,"byte_end":2214249,"line_start":1864,"line_end":1864,"column_start":1,"column_end":10}}]},{"kind":"Static","id":{"krate":0,"index":1274},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":34541,"byte_end":34550,"line_start":587,"line_end":587,"column_start":12,"column_end":21},"name":"BIG5_INIT","qualname":"::BIG5_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the Big5 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1276},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":34867,"byte_end":34871,"line_start":598,"line_end":598,"column_start":12,"column_end":16},"name":"BIG5","qualname":"::BIG5","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The Big5 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1278},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35476,"byte_end":35487,"line_start":612,"line_end":612,"column_start":12,"column_end":23},"name":"EUC_JP_INIT","qualname":"::EUC_JP_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the EUC-JP encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1280},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35809,"byte_end":35815,"line_start":623,"line_end":623,"column_start":12,"column_end":18},"name":"EUC_JP","qualname":"::EUC_JP","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The EUC-JP encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1282},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":36422,"byte_end":36433,"line_start":637,"line_end":637,"column_start":12,"column_end":23},"name":"EUC_KR_INIT","qualname":"::EUC_KR_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the EUC-KR encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1284},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":36755,"byte_end":36761,"line_start":648,"line_end":648,"column_start":12,"column_end":18},"name":"EUC_KR","qualname":"::EUC_KR","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The EUC-KR encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1286},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37365,"byte_end":37373,"line_start":662,"line_end":662,"column_start":12,"column_end":20},"name":"GBK_INIT","qualname":"::GBK_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the GBK encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1288},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37687,"byte_end":37690,"line_start":673,"line_end":673,"column_start":12,"column_end":15},"name":"GBK","qualname":"::GBK","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The GBK encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1290},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":38294,"byte_end":38305,"line_start":687,"line_end":687,"column_start":12,"column_end":23},"name":"IBM866_INIT","qualname":"::IBM866_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the IBM866 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1292},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":38651,"byte_end":38657,"line_start":698,"line_end":698,"column_start":12,"column_end":18},"name":"IBM866","qualname":"::IBM866","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The IBM866 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1294},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":39269,"byte_end":39285,"line_start":712,"line_end":712,"column_start":12,"column_end":28},"name":"ISO_2022_JP_INIT","qualname":"::ISO_2022_JP_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the ISO-2022-JP encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1296},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":39621,"byte_end":39632,"line_start":723,"line_end":723,"column_start":12,"column_end":23},"name":"ISO_2022_JP","qualname":"::ISO_2022_JP","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-2022-JP encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1298},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":40249,"byte_end":40265,"line_start":737,"line_end":737,"column_start":12,"column_end":28},"name":"ISO_8859_10_INIT","qualname":"::ISO_8859_10_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the ISO-8859-10 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1300},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":40626,"byte_end":40637,"line_start":748,"line_end":748,"column_start":12,"column_end":23},"name":"ISO_8859_10","qualname":"::ISO_8859_10","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-10 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1302},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":41254,"byte_end":41270,"line_start":762,"line_end":762,"column_start":12,"column_end":28},"name":"ISO_8859_13_INIT","qualname":"::ISO_8859_13_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the ISO-8859-13 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1304},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":41631,"byte_end":41642,"line_start":773,"line_end":773,"column_start":12,"column_end":23},"name":"ISO_8859_13","qualname":"::ISO_8859_13","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-13 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1306},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":42259,"byte_end":42275,"line_start":787,"line_end":787,"column_start":12,"column_end":28},"name":"ISO_8859_14_INIT","qualname":"::ISO_8859_14_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the ISO-8859-14 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1308},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":42636,"byte_end":42647,"line_start":798,"line_end":798,"column_start":12,"column_end":23},"name":"ISO_8859_14","qualname":"::ISO_8859_14","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-14 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1310},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":43264,"byte_end":43280,"line_start":812,"line_end":812,"column_start":12,"column_end":28},"name":"ISO_8859_15_INIT","qualname":"::ISO_8859_15_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the ISO-8859-15 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1312},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":43641,"byte_end":43652,"line_start":823,"line_end":823,"column_start":12,"column_end":23},"name":"ISO_8859_15","qualname":"::ISO_8859_15","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-15 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1314},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44269,"byte_end":44285,"line_start":837,"line_end":837,"column_start":12,"column_end":28},"name":"ISO_8859_16_INIT","qualname":"::ISO_8859_16_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the ISO-8859-16 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1316},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44646,"byte_end":44657,"line_start":848,"line_end":848,"column_start":12,"column_end":23},"name":"ISO_8859_16","qualname":"::ISO_8859_16","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-16 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1318},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":45273,"byte_end":45288,"line_start":862,"line_end":862,"column_start":12,"column_end":27},"name":"ISO_8859_2_INIT","qualname":"::ISO_8859_2_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the ISO-8859-2 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1320},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":45646,"byte_end":45656,"line_start":873,"line_end":873,"column_start":12,"column_end":22},"name":"ISO_8859_2","qualname":"::ISO_8859_2","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-2 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1322},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46271,"byte_end":46286,"line_start":887,"line_end":887,"column_start":12,"column_end":27},"name":"ISO_8859_3_INIT","qualname":"::ISO_8859_3_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the ISO-8859-3 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1324},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46644,"byte_end":46654,"line_start":898,"line_end":898,"column_start":12,"column_end":22},"name":"ISO_8859_3","qualname":"::ISO_8859_3","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-3 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1326},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":47269,"byte_end":47284,"line_start":912,"line_end":912,"column_start":12,"column_end":27},"name":"ISO_8859_4_INIT","qualname":"::ISO_8859_4_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the ISO-8859-4 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1328},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":47642,"byte_end":47652,"line_start":923,"line_end":923,"column_start":12,"column_end":22},"name":"ISO_8859_4","qualname":"::ISO_8859_4","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-4 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1330},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":48267,"byte_end":48282,"line_start":937,"line_end":937,"column_start":12,"column_end":27},"name":"ISO_8859_5_INIT","qualname":"::ISO_8859_5_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the ISO-8859-5 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1332},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":48640,"byte_end":48650,"line_start":948,"line_end":948,"column_start":12,"column_end":22},"name":"ISO_8859_5","qualname":"::ISO_8859_5","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-5 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1334},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":49265,"byte_end":49280,"line_start":962,"line_end":962,"column_start":12,"column_end":27},"name":"ISO_8859_6_INIT","qualname":"::ISO_8859_6_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the ISO-8859-6 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1336},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":49638,"byte_end":49648,"line_start":973,"line_end":973,"column_start":12,"column_end":22},"name":"ISO_8859_6","qualname":"::ISO_8859_6","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-6 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1338},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":50263,"byte_end":50278,"line_start":987,"line_end":987,"column_start":12,"column_end":27},"name":"ISO_8859_7_INIT","qualname":"::ISO_8859_7_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the ISO-8859-7 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1340},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":50636,"byte_end":50646,"line_start":998,"line_end":998,"column_start":12,"column_end":22},"name":"ISO_8859_7","qualname":"::ISO_8859_7","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-7 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1342},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":51261,"byte_end":51276,"line_start":1012,"line_end":1012,"column_start":12,"column_end":27},"name":"ISO_8859_8_INIT","qualname":"::ISO_8859_8_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the ISO-8859-8 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1344},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":51634,"byte_end":51644,"line_start":1023,"line_end":1023,"column_start":12,"column_end":22},"name":"ISO_8859_8","qualname":"::ISO_8859_8","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-8 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1346},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":52261,"byte_end":52278,"line_start":1037,"line_end":1037,"column_start":12,"column_end":29},"name":"ISO_8859_8_I_INIT","qualname":"::ISO_8859_8_I_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the ISO-8859-8-I encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1348},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":52640,"byte_end":52652,"line_start":1048,"line_end":1048,"column_start":12,"column_end":24},"name":"ISO_8859_8_I","qualname":"::ISO_8859_8_I","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-8-I encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1350},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":53265,"byte_end":53276,"line_start":1062,"line_end":1062,"column_start":12,"column_end":23},"name":"KOI8_R_INIT","qualname":"::KOI8_R_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the KOI8-R encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1352},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":53622,"byte_end":53628,"line_start":1073,"line_end":1073,"column_start":12,"column_end":18},"name":"KOI8_R","qualname":"::KOI8_R","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The KOI8-R encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1354},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":54235,"byte_end":54246,"line_start":1087,"line_end":1087,"column_start":12,"column_end":23},"name":"KOI8_U_INIT","qualname":"::KOI8_U_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the KOI8-U encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1356},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":54592,"byte_end":54598,"line_start":1098,"line_end":1098,"column_start":12,"column_end":18},"name":"KOI8_U","qualname":"::KOI8_U","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The KOI8-U encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1358},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":55208,"byte_end":55222,"line_start":1112,"line_end":1112,"column_start":12,"column_end":26},"name":"SHIFT_JIS_INIT","qualname":"::SHIFT_JIS_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the Shift_JIS encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1360},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":55553,"byte_end":55562,"line_start":1123,"line_end":1123,"column_start":12,"column_end":21},"name":"SHIFT_JIS","qualname":"::SHIFT_JIS","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The Shift_JIS encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1362},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":56174,"byte_end":56187,"line_start":1137,"line_end":1137,"column_start":12,"column_end":25},"name":"UTF_16BE_INIT","qualname":"::UTF_16BE_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the UTF-16BE encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1364},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":56515,"byte_end":56523,"line_start":1148,"line_end":1148,"column_start":12,"column_end":20},"name":"UTF_16BE","qualname":"::UTF_16BE","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The UTF-16BE encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1366},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":57134,"byte_end":57147,"line_start":1162,"line_end":1162,"column_start":12,"column_end":25},"name":"UTF_16LE_INIT","qualname":"::UTF_16LE_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the UTF-16LE encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1368},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":57475,"byte_end":57483,"line_start":1173,"line_end":1173,"column_start":12,"column_end":20},"name":"UTF_16LE","qualname":"::UTF_16LE","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The UTF-16LE encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1370},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":58091,"byte_end":58101,"line_start":1187,"line_end":1187,"column_start":12,"column_end":22},"name":"UTF_8_INIT","qualname":"::UTF_8_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the UTF-8 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1372},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":58420,"byte_end":58425,"line_start":1198,"line_end":1198,"column_start":12,"column_end":17},"name":"UTF_8","qualname":"::UTF_8","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The UTF-8 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1374},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":59032,"byte_end":59044,"line_start":1212,"line_end":1212,"column_start":12,"column_end":24},"name":"GB18030_INIT","qualname":"::GB18030_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the gb18030 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1376},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":59370,"byte_end":59377,"line_start":1223,"line_end":1223,"column_start":12,"column_end":19},"name":"GB18030","qualname":"::GB18030","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The gb18030 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1378},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":59988,"byte_end":60002,"line_start":1237,"line_end":1237,"column_start":12,"column_end":26},"name":"MACINTOSH_INIT","qualname":"::MACINTOSH_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the macintosh encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1380},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":60357,"byte_end":60366,"line_start":1248,"line_end":1248,"column_start":12,"column_end":21},"name":"MACINTOSH","qualname":"::MACINTOSH","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The macintosh encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1382},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":60981,"byte_end":60997,"line_start":1262,"line_end":1262,"column_start":12,"column_end":28},"name":"REPLACEMENT_INIT","qualname":"::REPLACEMENT_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the replacement encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1384},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":61335,"byte_end":61346,"line_start":1273,"line_end":1273,"column_start":12,"column_end":23},"name":"REPLACEMENT","qualname":"::REPLACEMENT","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The replacement encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1386},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":61964,"byte_end":61981,"line_start":1287,"line_end":1287,"column_start":12,"column_end":29},"name":"WINDOWS_1250_INIT","qualname":"::WINDOWS_1250_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the windows-1250 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1388},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":62345,"byte_end":62357,"line_start":1298,"line_end":1298,"column_start":12,"column_end":24},"name":"WINDOWS_1250","qualname":"::WINDOWS_1250","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1250 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1390},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":62976,"byte_end":62993,"line_start":1312,"line_end":1312,"column_start":12,"column_end":29},"name":"WINDOWS_1251_INIT","qualname":"::WINDOWS_1251_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the windows-1251 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1392},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":63357,"byte_end":63369,"line_start":1323,"line_end":1323,"column_start":12,"column_end":24},"name":"WINDOWS_1251","qualname":"::WINDOWS_1251","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1251 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1394},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":63988,"byte_end":64005,"line_start":1337,"line_end":1337,"column_start":12,"column_end":29},"name":"WINDOWS_1252_INIT","qualname":"::WINDOWS_1252_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the windows-1252 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1396},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":64369,"byte_end":64381,"line_start":1348,"line_end":1348,"column_start":12,"column_end":24},"name":"WINDOWS_1252","qualname":"::WINDOWS_1252","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1252 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1398},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":65000,"byte_end":65017,"line_start":1362,"line_end":1362,"column_start":12,"column_end":29},"name":"WINDOWS_1253_INIT","qualname":"::WINDOWS_1253_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the windows-1253 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1400},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":65381,"byte_end":65393,"line_start":1373,"line_end":1373,"column_start":12,"column_end":24},"name":"WINDOWS_1253","qualname":"::WINDOWS_1253","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1253 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1402},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":66012,"byte_end":66029,"line_start":1387,"line_end":1387,"column_start":12,"column_end":29},"name":"WINDOWS_1254_INIT","qualname":"::WINDOWS_1254_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the windows-1254 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1404},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":66393,"byte_end":66405,"line_start":1398,"line_end":1398,"column_start":12,"column_end":24},"name":"WINDOWS_1254","qualname":"::WINDOWS_1254","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1254 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1406},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":67024,"byte_end":67041,"line_start":1412,"line_end":1412,"column_start":12,"column_end":29},"name":"WINDOWS_1255_INIT","qualname":"::WINDOWS_1255_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the windows-1255 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1408},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":67405,"byte_end":67417,"line_start":1423,"line_end":1423,"column_start":12,"column_end":24},"name":"WINDOWS_1255","qualname":"::WINDOWS_1255","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1255 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1410},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":68036,"byte_end":68053,"line_start":1437,"line_end":1437,"column_start":12,"column_end":29},"name":"WINDOWS_1256_INIT","qualname":"::WINDOWS_1256_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the windows-1256 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1412},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":68417,"byte_end":68429,"line_start":1448,"line_end":1448,"column_start":12,"column_end":24},"name":"WINDOWS_1256","qualname":"::WINDOWS_1256","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1256 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1414},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":69048,"byte_end":69065,"line_start":1462,"line_end":1462,"column_start":12,"column_end":29},"name":"WINDOWS_1257_INIT","qualname":"::WINDOWS_1257_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the windows-1257 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1416},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":69429,"byte_end":69441,"line_start":1473,"line_end":1473,"column_start":12,"column_end":24},"name":"WINDOWS_1257","qualname":"::WINDOWS_1257","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1257 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1418},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":70060,"byte_end":70077,"line_start":1487,"line_end":1487,"column_start":12,"column_end":29},"name":"WINDOWS_1258_INIT","qualname":"::WINDOWS_1258_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the windows-1258 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1420},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":70441,"byte_end":70453,"line_start":1498,"line_end":1498,"column_start":12,"column_end":24},"name":"WINDOWS_1258","qualname":"::WINDOWS_1258","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1258 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1422},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":71071,"byte_end":71087,"line_start":1512,"line_end":1512,"column_start":12,"column_end":28},"name":"WINDOWS_874_INIT","qualname":"::WINDOWS_874_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the windows-874 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1424},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":71448,"byte_end":71459,"line_start":1523,"line_end":1523,"column_start":12,"column_end":23},"name":"WINDOWS_874","qualname":"::WINDOWS_874","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-874 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1426},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":72079,"byte_end":72098,"line_start":1537,"line_end":1537,"column_start":12,"column_end":31},"name":"X_MAC_CYRILLIC_INIT","qualname":"::X_MAC_CYRILLIC_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the x-mac-cyrillic encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1428},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":72468,"byte_end":72482,"line_start":1548,"line_end":1548,"column_start":12,"column_end":26},"name":"X_MAC_CYRILLIC","qualname":"::X_MAC_CYRILLIC","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The x-mac-cyrillic encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1430},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":73105,"byte_end":73124,"line_start":1562,"line_end":1562,"column_start":12,"column_end":31},"name":"X_USER_DEFINED_INIT","qualname":"::X_USER_DEFINED_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the x-user-defined encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1432},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":73468,"byte_end":73482,"line_start":1573,"line_end":1573,"column_start":12,"column_end":26},"name":"X_USER_DEFINED","qualname":"::X_USER_DEFINED","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The x-user-defined encoding.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1438},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":106302,"byte_end":106310,"line_start":2079,"line_end":2079,"column_start":12,"column_end":20},"name":"Encoding","qualname":"::Encoding","value":"Encoding {  }","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":689}],"decl_id":null,"docs":" An encoding as defined in the [Encoding Standard][1].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":107466,"byte_end":107475,"line_start":2106,"line_end":2106,"column_start":12,"column_end":21},"name":"for_label","qualname":"<Encoding>::for_label","value":"fn (label: &[u8]) -> Option<&'static Encoding>","parent":null,"children":[],"decl_id":null,"docs":" Implements the\n [_get an encoding_](https://encoding.spec.whatwg.org/#concept-encoding-get)\n algorithm.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":112237,"byte_end":112261,"line_start":2232,"line_end":2232,"column_start":12,"column_end":36},"name":"for_label_no_replacement","qualname":"<Encoding>::for_label_no_replacement","value":"fn (label: &[u8]) -> Option<&'static Encoding>","parent":null,"children":[],"decl_id":null,"docs":" This method behaves the same as `for_label()`, except when `for_label()`\n would return `Some(REPLACEMENT)`, this method returns `None` instead.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":112216,"byte_end":112225,"line_start":2231,"line_end":2231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":113117,"byte_end":113124,"line_start":2257,"line_end":2257,"column_start":12,"column_end":19},"name":"for_bom","qualname":"<Encoding>::for_bom","value":"fn (buffer: &[u8]) -> Option<(&'static Encoding, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Performs non-incremental BOM sniffing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":113096,"byte_end":113105,"line_start":2256,"line_end":2256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":113702,"byte_end":113706,"line_start":2276,"line_end":2276,"column_start":12,"column_end":16},"name":"name","qualname":"<Encoding>::name","value":"fn (&'static self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this encoding.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":113681,"byte_end":113690,"line_start":2275,"line_end":2275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":113975,"byte_end":113996,"line_start":2285,"line_end":2285,"column_start":12,"column_end":33},"name":"can_encode_everything","qualname":"<Encoding>::can_encode_everything","value":"fn (&'static self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the _output encoding_ of this encoding can encode every\n `char`. (Only true if the output encoding is UTF-8.)","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":113954,"byte_end":113963,"line_start":2284,"line_end":2284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":114258,"byte_end":114277,"line_start":2294,"line_end":2294,"column_start":12,"column_end":31},"name":"is_ascii_compatible","qualname":"<Encoding>::is_ascii_compatible","value":"fn (&'static self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the bytes 0x00...0x7F map exclusively to the characters\n U+0000...U+007F and vice versa.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":114237,"byte_end":114246,"line_start":2293,"line_end":2293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":114890,"byte_end":114905,"line_start":2310,"line_end":2310,"column_start":12,"column_end":27},"name":"output_encoding","qualname":"<Encoding>::output_encoding","value":"fn (&'static self) -> &'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" Returns the _output encoding_ of this encoding. This is UTF-8 for\n UTF-16BE, UTF-16LE and replacement and the encoding itself otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":114869,"byte_end":114878,"line_start":2309,"line_end":2309,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":116866,"byte_end":116872,"line_start":2353,"line_end":2353,"column_start":12,"column_end":18},"name":"decode","qualname":"<Encoding>::decode","value":"fn <'a> (&'static self, bytes: &'a [u8]) -> (Cow<'a, str>, &'static Encoding, bool)","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _with BOM sniffing_ and with\n malformed sequences replaced with the REPLACEMENT CHARACTER when the\n entire input is available as a single buffer (i.e. the end of the\n buffer marks the end of the stream).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":116845,"byte_end":116854,"line_start":2352,"line_end":2352,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":118961,"byte_end":118984,"line_start":2396,"line_end":2396,"column_start":12,"column_end":35},"name":"decode_with_bom_removal","qualname":"<Encoding>::decode_with_bom_removal","value":"fn <'a> (&'static self, bytes: &'a [u8]) -> (Cow<'a, str>, bool)","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _with BOM removal_ and with\n malformed sequences replaced with the REPLACEMENT CHARACTER when the\n entire input is available as a single buffer (i.e. the end of the\n buffer marks the end of the stream).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":118940,"byte_end":118949,"line_start":2395,"line_end":2395,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":121136,"byte_end":121163,"line_start":2441,"line_end":2441,"column_start":12,"column_end":39},"name":"decode_without_bom_handling","qualname":"<Encoding>::decode_without_bom_handling","value":"fn <'a> (&'static self, bytes: &'a [u8]) -> (Cow<'a, str>, bool)","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _without BOM handling_ and\n with malformed sequences replaced with the REPLACEMENT CHARACTER when\n the entire input is available as a single buffer (i.e. the end of the\n buffer marks the end of the stream).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":125624,"byte_end":125675,"line_start":2542,"line_end":2542,"column_start":12,"column_end":63},"name":"decode_without_bom_handling_and_without_replacement","qualname":"<Encoding>::decode_without_bom_handling_and_without_replacement","value":"fn <'a> (&'static self, bytes: &'a [u8]) -> Option<Cow<'a, str>>","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _without BOM handling_ and\n _with malformed sequences treated as fatal_ when the entire input is\n available as a single buffer (i.e. the end of the buffer marks the end\n of the stream).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":129997,"byte_end":130003,"line_start":2638,"line_end":2638,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoding>::encode","value":"fn <'a> (&'static self, string: &'a str) -> (Cow<'a, [u8]>, &'static Encoding, bool)","parent":null,"children":[],"decl_id":null,"docs":" Encode complete input to `Cow<'a, [u8]>` with unmappable characters\n replaced with decimal numeric character references when the entire input\n is available as a single buffer (i.e. the end of the buffer marks the\n end of the stream).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":132860,"byte_end":132871,"line_start":2708,"line_end":2708,"column_start":12,"column_end":23},"name":"new_decoder","qualname":"<Encoding>::new_decoder","value":"fn (&'static self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new decoder for this encoding with BOM sniffing enabled.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":132839,"byte_end":132848,"line_start":2707,"line_end":2707,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":133450,"byte_end":133478,"line_start":2722,"line_end":2722,"column_start":12,"column_end":40},"name":"new_decoder_with_bom_removal","qualname":"<Encoding>::new_decoder_with_bom_removal","value":"fn (&'static self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new decoder for this encoding with BOM removal.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":133429,"byte_end":133438,"line_start":2721,"line_end":2721,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":134166,"byte_end":134198,"line_start":2738,"line_end":2738,"column_start":12,"column_end":44},"name":"new_decoder_without_bom_handling","qualname":"<Encoding>::new_decoder_without_bom_handling","value":"fn (&'static self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new decoder for this encoding with BOM handling disabled.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":134145,"byte_end":134154,"line_start":2737,"line_end":2737,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":134454,"byte_end":134465,"line_start":2746,"line_end":2746,"column_start":12,"column_end":23},"name":"new_encoder","qualname":"<Encoding>::new_encoder","value":"fn (&'static self) -> Encoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new encoder for the output encoding of this encoding.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":134433,"byte_end":134442,"line_start":2745,"line_end":2745,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":135038,"byte_end":135054,"line_start":2761,"line_end":2761,"column_start":12,"column_end":28},"name":"utf8_valid_up_to","qualname":"<Encoding>::utf8_valid_up_to","value":"fn (bytes: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Validates UTF-8.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":135359,"byte_end":135376,"line_start":2771,"line_end":2771,"column_start":12,"column_end":29},"name":"ascii_valid_up_to","qualname":"<Encoding>::ascii_valid_up_to","value":"fn (bytes: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Validates ASCII.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":135796,"byte_end":135825,"line_start":2783,"line_end":2783,"column_start":12,"column_end":41},"name":"iso_2022_jp_ascii_valid_up_to","qualname":"<Encoding>::iso_2022_jp_ascii_valid_up_to","value":"fn (bytes: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Validates ISO-2022-JP ASCII-state data.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":773},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":139143,"byte_end":139153,"line_start":2901,"line_end":2901,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::CoderResult::InputEmpty","value":"CoderResult::InputEmpty","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" The input was exhausted.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":775},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":139423,"byte_end":139433,"line_start":2908,"line_end":2908,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::CoderResult::OutputFull","value":"CoderResult::OutputFull","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" The converter cannot produce another unit of output, because the output\n buffer does not have enough space left.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1742},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":138874,"byte_end":138885,"line_start":2895,"line_end":2895,"column_start":10,"column_end":21},"name":"CoderResult","qualname":"::CoderResult","value":"CoderResult::{InputEmpty, OutputFull}","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":775}],"decl_id":null,"docs":" Result of a (potentially partial) decode or encode operation with\n replacement.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":138821,"byte_end":138832,"line_start":2893,"line_end":2893,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":138865,"byte_end":139436,"line_start":2895,"line_end":2909,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":777},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":139826,"byte_end":139836,"line_start":2920,"line_end":2920,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::DecoderResult::InputEmpty","value":"DecoderResult::InputEmpty","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":" The input was exhausted.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":779},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":140102,"byte_end":140112,"line_start":2927,"line_end":2927,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::DecoderResult::OutputFull","value":"DecoderResult::OutputFull","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":" The decoder cannot produce another unit of output, because the output\n buffer does not have enough space left.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":781},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":141020,"byte_end":141029,"line_start":2945,"line_end":2945,"column_start":5,"column_end":14},"name":"Malformed","qualname":"::DecoderResult::Malformed","value":"DecoderResult::Malformed(u8, u8)","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":" The decoder encountered a malformed byte sequence.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1756},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":139567,"byte_end":139580,"line_start":2914,"line_end":2914,"column_start":10,"column_end":23},"name":"DecoderResult","qualname":"::DecoderResult","value":"DecoderResult::{InputEmpty, OutputFull, Malformed}","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":779},{"krate":0,"index":781}],"decl_id":null,"docs":" Result of a (potentially partial) decode operation without replacement.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":139514,"byte_end":139525,"line_start":2912,"line_end":2912,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":139558,"byte_end":141086,"line_start":2914,"line_end":2946,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1500},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":146261,"byte_end":146268,"line_start":3045,"line_end":3045,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":717}],"decl_id":null,"docs":" A converter that decodes a byte stream into Unicode according to a\n character encoding in a streaming (incremental) manner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":147453,"byte_end":147461,"line_start":3081,"line_end":3081,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Decoder>::encoding","value":"fn (&self) -> &'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The `Encoding` this `Decoder` is for.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":147432,"byte_end":147441,"line_start":3080,"line_end":3080,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":148007,"byte_end":148029,"line_start":3094,"line_end":3094,"column_start":12,"column_end":34},"name":"max_utf8_buffer_length","qualname":"<Decoder>::max_utf8_buffer_length","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case UTF-8 output size _with replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":153162,"byte_end":153204,"line_start":3194,"line_end":3194,"column_start":12,"column_end":54},"name":"max_utf8_buffer_length_without_replacement","qualname":"<Decoder>::max_utf8_buffer_length_without_replacement","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case UTF-8 output size _without replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":158221,"byte_end":158235,"line_start":3292,"line_end":3292,"column_start":12,"column_end":26},"name":"decode_to_utf8","qualname":"<Decoder>::decode_to_utf8","value":"fn (&mut self, src: &[u8], dst: &mut [u8], last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with malformed sequences\n replaced with the REPLACEMENT CHARACTER.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":160448,"byte_end":160461,"line_start":3344,"line_end":3344,"column_start":12,"column_end":25},"name":"decode_to_str","qualname":"<Decoder>::decode_to_str","value":"fn (&mut self, src: &[u8], dst: &mut str, last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with malformed sequences\n replaced with the REPLACEMENT CHARACTER with type system signaling\n of UTF-8 validity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":162355,"byte_end":162371,"line_start":3387,"line_end":3387,"column_start":12,"column_end":28},"name":"decode_to_string","qualname":"<Decoder>::decode_to_string","value":"fn (&mut self, src: &[u8], dst: &mut String, last: bool) -> (CoderResult, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with malformed sequences\n replaced with the REPLACEMENT CHARACTER using a `String` receiver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":164355,"byte_end":164388,"line_start":3432,"line_end":3432,"column_start":12,"column_end":45},"name":"decode_to_str_without_replacement","qualname":"<Decoder>::decode_to_str_without_replacement","value":"fn (&mut self, src: &[u8], dst: &mut str, last: bool) -> (DecoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with type system signaling\n of UTF-8 validity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":166223,"byte_end":166259,"line_start":3473,"line_end":3473,"column_start":12,"column_end":48},"name":"decode_to_string_without_replacement","qualname":"<Decoder>::decode_to_string_without_replacement","value":"fn (&mut self, src: &[u8], dst: &mut String, last: bool) -> (DecoderResult, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 using a `String` receiver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":167493,"byte_end":167516,"line_start":3502,"line_end":3502,"column_start":12,"column_end":35},"name":"max_utf16_buffer_length","qualname":"<Decoder>::max_utf16_buffer_length","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case UTF-16 output size (with or without replacement).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":172080,"byte_end":172095,"line_start":3588,"line_end":3588,"column_start":12,"column_end":27},"name":"decode_to_utf16","qualname":"<Decoder>::decode_to_utf16","value":"fn (&mut self, src: &[u8], dst: &mut [u16], last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-16 with malformed sequences\n replaced with the REPLACEMENT CHARACTER.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":787},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":174703,"byte_end":174713,"line_start":3649,"line_end":3649,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::EncoderResult::InputEmpty","value":"EncoderResult::InputEmpty","parent":{"krate":0,"index":1792},"children":[],"decl_id":null,"docs":" The input was exhausted.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":789},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":174979,"byte_end":174989,"line_start":3656,"line_end":3656,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::EncoderResult::OutputFull","value":"EncoderResult::OutputFull","parent":{"krate":0,"index":1792},"children":[],"decl_id":null,"docs":" The encoder cannot produce another unit of output, because the output\n buffer does not have enough space left.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":791},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":175232,"byte_end":175242,"line_start":3663,"line_end":3663,"column_start":5,"column_end":15},"name":"Unmappable","qualname":"::EncoderResult::Unmappable","value":"EncoderResult::Unmappable(char)","parent":{"krate":0,"index":1792},"children":[],"decl_id":null,"docs":" The encoder encountered an unmappable character.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1792},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":174444,"byte_end":174457,"line_start":3643,"line_end":3643,"column_start":10,"column_end":23},"name":"EncoderResult","qualname":"::EncoderResult","value":"EncoderResult::{InputEmpty, OutputFull, Unmappable}","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":791}],"decl_id":null,"docs":" Result of a (potentially partial) encode operation without replacement.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":174391,"byte_end":174402,"line_start":3641,"line_end":3641,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":174435,"byte_end":175251,"line_start":3643,"line_end":3664,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1530},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":181686,"byte_end":181693,"line_start":3782,"line_end":3782,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":721}],"decl_id":null,"docs":" A converter that encodes a Unicode stream into bytes according to a\n character encoding in a streaming (incremental) manner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":182012,"byte_end":182020,"line_start":3797,"line_end":3797,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Encoder>::encoding","value":"fn (&self) -> &'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The `Encoding` this `Encoder` is for.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":181991,"byte_end":182000,"line_start":3796,"line_end":3796,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":182223,"byte_end":182240,"line_start":3804,"line_end":3804,"column_start":12,"column_end":29},"name":"has_pending_state","qualname":"<Encoder>::has_pending_state","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is an ISO-2022-JP encoder that's not in the\n ASCII state and `false` otherwise.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":182202,"byte_end":182211,"line_start":3803,"line_end":3803,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":182747,"byte_end":182792,"line_start":3817,"line_end":3817,"column_start":12,"column_end":57},"name":"max_buffer_length_from_utf8_if_no_unmappables","qualname":"<Encoder>::max_buffer_length_from_utf8_if_no_unmappables","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-8 with\n replacement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":183592,"byte_end":183639,"line_start":3838,"line_end":3838,"column_start":12,"column_end":59},"name":"max_buffer_length_from_utf8_without_replacement","qualname":"<Encoder>::max_buffer_length_from_utf8_without_replacement","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-8 without\n replacement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":184228,"byte_end":184244,"line_start":3852,"line_end":3852,"column_start":12,"column_end":28},"name":"encode_from_utf8","qualname":"<Encoder>::encode_from_utf8","value":"fn (&mut self, src: &str, dst: &mut [u8], last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 with unmappable\n characters replaced with HTML (decimal) numeric character references.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":187208,"byte_end":187231,"line_start":3919,"line_end":3919,"column_start":12,"column_end":35},"name":"encode_from_utf8_to_vec","qualname":"<Encoder>::encode_from_utf8_to_vec","value":"fn (&mut self, src: &str, dst: &mut Vec<u8>, last: bool) -> (CoderResult, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 with unmappable\n characters replaced with HTML (decimal) numeric character references.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":188061,"byte_end":188097,"line_start":3941,"line_end":3941,"column_start":12,"column_end":48},"name":"encode_from_utf8_without_replacement","qualname":"<Encoder>::encode_from_utf8_without_replacement","value":"fn (&mut self, src: &str, dst: &mut [u8], last: bool) -> (EncoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 _without replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":188686,"byte_end":188729,"line_start":3955,"line_end":3955,"column_start":12,"column_end":55},"name":"encode_from_utf8_to_vec_without_replacement","qualname":"<Encoder>::encode_from_utf8_to_vec_without_replacement","value":"fn (&mut self, src: &str, dst: &mut Vec<u8>, last: bool) -> (EncoderResult, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 _without replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":189825,"byte_end":189871,"line_start":3980,"line_end":3980,"column_start":12,"column_end":58},"name":"max_buffer_length_from_utf16_if_no_unmappables","qualname":"<Encoder>::max_buffer_length_from_utf16_if_no_unmappables","value":"fn (&self, u16_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-16 with\n replacement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":190672,"byte_end":190720,"line_start":4001,"line_end":4001,"column_start":12,"column_end":60},"name":"max_buffer_length_from_utf16_without_replacement","qualname":"<Encoder>::max_buffer_length_from_utf16_without_replacement","value":"fn (&self, u16_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-16 without\n replacement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":191311,"byte_end":191328,"line_start":4015,"line_end":4015,"column_start":12,"column_end":29},"name":"encode_from_utf16","qualname":"<Encoder>::encode_from_utf16","value":"fn (&mut self, src: &[u16], dst: &mut [u8], last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-16 with unmappable\n characters replaced with HTML (decimal) numeric character references.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":194651,"byte_end":194688,"line_start":4087,"line_end":4087,"column_start":12,"column_end":49},"name":"encode_from_utf16_without_replacement","qualname":"<Encoder>::encode_from_utf16_without_replacement","value":"fn (&mut self, src: &[u16], dst: &mut [u8], last: bool) -> (EncoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-16 _without replacement_.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,115,105,110,103,108,101,95,98,121,116,101,46,114,115],"byte_start":304111,"byte_end":304128,"line_start":19,"line_end":19,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,115,105,110,103,108,101,95,98,121,116,101,46,114,115],"byte_start":315128,"byte_end":315145,"line_start":224,"line_end":224,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":1586},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,117,116,102,95,56,46,114,115],"byte_start":353143,"byte_end":353154,"line_start":435,"line_end":435,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":1592},{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,117,116,102,95,56,46,114,115],"byte_start":357743,"byte_end":357754,"line_start":573,"line_end":573,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":380529,"byte_end":380543,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":381094,"byte_end":381108,"line_start":51,"line_end":51,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":1596},{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":396566,"byte_end":396580,"line_start":406,"line_end":406,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":1600},{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,98,105,103,53,46,114,115],"byte_start":409506,"byte_end":409517,"line_start":21,"line_end":21,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":1604},{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,98,105,103,53,46,114,115],"byte_start":415435,"byte_end":415446,"line_start":167,"line_end":167,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":1608},{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":424546,"byte_end":424558,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":425047,"byte_end":425059,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":1612},{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":431791,"byte_end":431803,"line_start":200,"line_end":200,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":1616},{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,105,115,111,95,50,48,50,50,95,106,112,46,114,115],"byte_start":441612,"byte_end":441628,"line_start":36,"line_end":36,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":1628},{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,105,115,111,95,50,48,50,50,95,106,112,46,114,115],"byte_start":457580,"byte_end":457596,"line_start":406,"line_end":406,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":1632},{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,115,104,105,102,116,95,106,105,115,46,114,115],"byte_start":485233,"byte_end":485248,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":1636},{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,115,104,105,102,116,95,106,105,115,46,114,115],"byte_start":492296,"byte_end":492311,"line_start":174,"line_end":174,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":1640},{"krate":0,"index":1642}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,101,117,99,95,107,114,46,114,115],"byte_start":502056,"byte_end":502068,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":1644},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,101,117,99,95,107,114,46,114,115],"byte_start":511431,"byte_end":511443,"line_start":226,"line_end":226,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":1648},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,114,101,112,108,97,99,101,109,101,110,116,46,114,115],"byte_start":518659,"byte_end":518677,"line_start":17,"line_end":17,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,120,95,117,115,101,114,95,100,101,102,105,110,101,100,46,114,115],"byte_start":521973,"byte_end":521991,"line_start":16,"line_end":16,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":1652},{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,120,95,117,115,101,114,95,100,101,102,105,110,101,100,46,114,115],"byte_start":523013,"byte_end":523031,"line_start":59,"line_end":59,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":1656},{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,117,116,102,95,49,54,46,114,115],"byte_start":526724,"byte_end":526736,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":1660},{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":590693,"byte_end":590703,"line_start":52,"line_end":52,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":591525,"byte_end":591539,"line_start":88,"line_end":88,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":592114,"byte_end":592130,"line_start":113,"line_end":113,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":592721,"byte_end":592735,"line_start":142,"line_end":142,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":594018,"byte_end":594035,"line_start":190,"line_end":190,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":595810,"byte_end":595826,"line_start":250,"line_end":250,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":601827,"byte_end":601840,"line_start":419,"line_end":419,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":603112,"byte_end":603128,"line_start":467,"line_end":467,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":604890,"byte_end":604905,"line_start":527,"line_end":527,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":612254,"byte_end":612265,"line_start":722,"line_end":722,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":623874,"byte_end":623889,"line_start":979,"line_end":979,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":624715,"byte_end":624732,"line_start":1010,"line_end":1010,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":625309,"byte_end":625319,"line_start":1039,"line_end":1039,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":776},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":636763,"byte_end":636777,"line_start":1290,"line_end":1290,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":637594,"byte_end":637610,"line_start":1321,"line_end":1321,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":638197,"byte_end":638210,"line_start":1350,"line_end":1350,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":638730,"byte_end":638743,"line_start":1374,"line_end":1374,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":639438,"byte_end":639453,"line_start":1403,"line_end":1403,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":640544,"byte_end":640558,"line_start":1442,"line_end":1442,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":641555,"byte_end":641570,"line_start":1480,"line_end":1480,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":2126552,"byte_end":2126566,"line_start":49,"line_end":49,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":2133134,"byte_end":2133148,"line_start":173,"line_end":173,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1154},{"krate":0,"index":1156},{"krate":0,"index":1158},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":2138825,"byte_end":2138840,"line_start":301,"line_end":301,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":106375,"byte_end":106383,"line_start":2084,"line_end":2084,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1446},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1452},{"krate":0,"index":1454},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1464},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":1476},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":135924,"byte_end":135932,"line_start":2788,"line_end":2788,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":136079,"byte_end":136087,"line_start":2795,"line_end":2795,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":136106,"byte_end":136114,"line_start":2797,"line_end":2797,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":136259,"byte_end":136267,"line_start":2804,"line_end":2804,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":146375,"byte_end":146382,"line_start":3051,"line_end":3051,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1782},{"krate":0,"index":1784},{"krate":0,"index":1786},{"krate":0,"index":1788},{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":175258,"byte_end":175271,"line_start":3666,"line_end":3666,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":181766,"byte_end":181773,"line_start":3787,"line_end":3787,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1544},{"krate":0,"index":1546},{"krate":0,"index":1548},{"krate":0,"index":1550},{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1556},{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":33130,"byte_end":33133,"line_start":546,"line_end":546,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1170}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,115,105,110,103,108,101,95,98,121,116,101,46,114,115],"byte_start":304111,"byte_end":304128,"line_start":19,"line_end":19,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":50},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,115,105,110,103,108,101,95,98,121,116,101,46,114,115],"byte_start":315128,"byte_end":315145,"line_start":224,"line_end":224,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,117,116,102,95,56,46,114,115],"byte_start":353143,"byte_end":353154,"line_start":435,"line_end":435,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,117,116,102,95,56,46,114,115],"byte_start":357743,"byte_end":357754,"line_start":573,"line_end":573,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":380529,"byte_end":380543,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":381094,"byte_end":381108,"line_start":51,"line_end":51,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,103,98,49,56,48,51,48,46,114,115],"byte_start":396566,"byte_end":396580,"line_start":406,"line_end":406,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,98,105,103,53,46,114,115],"byte_start":409506,"byte_end":409517,"line_start":21,"line_end":21,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,98,105,103,53,46,114,115],"byte_start":415435,"byte_end":415446,"line_start":167,"line_end":167,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":424546,"byte_end":424558,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":425047,"byte_end":425059,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,101,117,99,95,106,112,46,114,115],"byte_start":431791,"byte_end":431803,"line_start":200,"line_end":200,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,105,115,111,95,50,48,50,50,95,106,112,46,114,115],"byte_start":441612,"byte_end":441628,"line_start":36,"line_end":36,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,105,115,111,95,50,48,50,50,95,106,112,46,114,115],"byte_start":457580,"byte_end":457596,"line_start":406,"line_end":406,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,115,104,105,102,116,95,106,105,115,46,114,115],"byte_start":485233,"byte_end":485248,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,115,104,105,102,116,95,106,105,115,46,114,115],"byte_start":492296,"byte_end":492311,"line_start":174,"line_end":174,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,101,117,99,95,107,114,46,114,115],"byte_start":502056,"byte_end":502068,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,101,117,99,95,107,114,46,114,115],"byte_start":511431,"byte_end":511443,"line_start":226,"line_end":226,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,114,101,112,108,97,99,101,109,101,110,116,46,114,115],"byte_start":518659,"byte_end":518677,"line_start":17,"line_end":17,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,120,95,117,115,101,114,95,100,101,102,105,110,101,100,46,114,115],"byte_start":521973,"byte_end":521991,"line_start":16,"line_end":16,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,120,95,117,115,101,114,95,100,101,102,105,110,101,100,46,114,115],"byte_start":523013,"byte_end":523031,"line_start":59,"line_end":59,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,117,116,102,95,49,54,46,114,115],"byte_start":526724,"byte_end":526736,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":590693,"byte_end":590703,"line_start":52,"line_end":52,"column_start":10,"column_end":20},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":591525,"byte_end":591539,"line_start":88,"line_end":88,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":592114,"byte_end":592130,"line_start":113,"line_end":113,"column_start":14,"column_end":30},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":592721,"byte_end":592735,"line_start":142,"line_end":142,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":594018,"byte_end":594035,"line_start":190,"line_end":190,"column_start":14,"column_end":31},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":595810,"byte_end":595826,"line_start":250,"line_end":250,"column_start":10,"column_end":26},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":601827,"byte_end":601840,"line_start":419,"line_end":419,"column_start":14,"column_end":27},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":603112,"byte_end":603128,"line_start":467,"line_end":467,"column_start":14,"column_end":30},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":604890,"byte_end":604905,"line_start":527,"line_end":527,"column_start":10,"column_end":25},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":612254,"byte_end":612265,"line_start":722,"line_end":722,"column_start":10,"column_end":21},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":623874,"byte_end":623889,"line_start":979,"line_end":979,"column_start":14,"column_end":29},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":624715,"byte_end":624732,"line_start":1010,"line_end":1010,"column_start":14,"column_end":31},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":625309,"byte_end":625319,"line_start":1039,"line_end":1039,"column_start":10,"column_end":20},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":636763,"byte_end":636777,"line_start":1290,"line_end":1290,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":637594,"byte_end":637610,"line_start":1321,"line_end":1321,"column_start":14,"column_end":30},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":638197,"byte_end":638210,"line_start":1350,"line_end":1350,"column_start":14,"column_end":27},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":638730,"byte_end":638743,"line_start":1374,"line_end":1374,"column_start":14,"column_end":27},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":639438,"byte_end":639453,"line_start":1403,"line_end":1403,"column_start":14,"column_end":29},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":640544,"byte_end":640558,"line_start":1442,"line_end":1442,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,104,97,110,100,108,101,115,46,114,115],"byte_start":641555,"byte_end":641570,"line_start":1480,"line_end":1480,"column_start":10,"column_end":25},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":2126552,"byte_end":2126566,"line_start":49,"line_end":49,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":1134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":2133134,"byte_end":2133148,"line_start":173,"line_end":173,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":1148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,118,97,114,105,97,110,116,46,114,115],"byte_start":2138825,"byte_end":2138840,"line_start":301,"line_end":301,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":1162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":106375,"byte_end":106383,"line_start":2084,"line_end":2084,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":1438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":135924,"byte_end":135932,"line_start":2788,"line_end":2788,"column_start":20,"column_end":28},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":1438},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":136079,"byte_end":136087,"line_start":2795,"line_end":2795,"column_start":13,"column_end":21},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":1438},"to":{"krate":2,"index":2424}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":136106,"byte_end":136114,"line_start":2797,"line_end":2797,"column_start":15,"column_end":23},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":1438},"to":{"krate":2,"index":7292}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":136259,"byte_end":136267,"line_start":2804,"line_end":2804,"column_start":26,"column_end":34},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":1438},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":146375,"byte_end":146382,"line_start":3051,"line_end":3051,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":1500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":175258,"byte_end":175271,"line_start":3666,"line_end":3666,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":1792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,99,111,100,105,110,103,95,114,115,45,48,46,55,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":181766,"byte_end":181773,"line_start":3787,"line_end":3787,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":1530},"to":{"krate":4294967295,"index":4294967295}}]}