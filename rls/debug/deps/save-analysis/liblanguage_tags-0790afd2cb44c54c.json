{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"language_tags","disambiguator":[13521613870626218136,640861462442659773]},"crate_root":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src","external_crates":[{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11381577622635992493,17547473659604595133]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18108793355192929380,16468545247463735764]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11904953375042280309,14371983540252725821]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[1355694319277426326,16064730418872223952]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[16554292665456805706,897773524803637406]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9247162154814293369,8568939183132890470]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10008762999642871283,544601977840758240]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[15792583605743683862,4433965399607837619]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[10940074420694136997,2824510269351905908]}}],"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":29574,"line_start":1,"line_end":640,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":29574,"line_start":1,"line_end":640,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/language-tags-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":86},{"krate":0,"index":96},{"krate":0,"index":92},{"krate":0,"index":88},{"krate":0,"index":32},{"krate":0,"index":36},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":100},{"krate":0,"index":114},{"krate":0,"index":110},{"krate":0,"index":106},{"krate":0,"index":102},{"krate":0,"index":48},{"krate":0,"index":60},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":76},{"krate":0,"index":84}],"decl_id":null,"docs":" Language tags can be used identify human languages, scripts e.g. Latin script, countries and\n other regions.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":55},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2842,"byte_end":2860,"line_start":81,"line_end":81,"column_start":5,"column_end":23},"name":"DuplicateExtension","qualname":"::Error::DuplicateExtension","value":"Error::DuplicateExtension","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" The same extension subtag is only allowed once in a tag before the private use part.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":57},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2931,"byte_end":2945,"line_start":83,"line_end":83,"column_start":5,"column_end":19},"name":"EmptyExtension","qualname":"::Error::EmptyExtension","value":"Error::EmptyExtension","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" If an extension subtag is present, it must not be empty.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":59},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3011,"byte_end":3026,"line_start":85,"line_end":85,"column_start":5,"column_end":20},"name":"EmptyPrivateUse","qualname":"::Error::EmptyPrivateUse","value":"Error::EmptyPrivateUse","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" If the `x` subtag is present, it must not be empty.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":61},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3107,"byte_end":3120,"line_start":87,"line_end":87,"column_start":5,"column_end":18},"name":"ForbiddenChar","qualname":"::Error::ForbiddenChar","value":"Error::ForbiddenChar","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" The langtag contains a char that is not A-Z, a-z, 0-9 or the dash.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":63},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3196,"byte_end":3209,"line_start":89,"line_end":89,"column_start":5,"column_end":18},"name":"InvalidSubtag","qualname":"::Error::InvalidSubtag","value":"Error::InvalidSubtag","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" A subtag fails to parse, it does not match any other subtags.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":65},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3261,"byte_end":3276,"line_start":91,"line_end":91,"column_start":5,"column_end":20},"name":"InvalidLanguage","qualname":"::Error::InvalidLanguage","value":"Error::InvalidLanguage","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" The given language subtag is invalid.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":67},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3345,"byte_end":3358,"line_start":93,"line_end":93,"column_start":5,"column_end":18},"name":"SubtagTooLong","qualname":"::Error::SubtagTooLong","value":"Error::SubtagTooLong","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" A subtag may be eight characters in length at maximum.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":69},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3451,"byte_end":3466,"line_start":95,"line_end":95,"column_start":5,"column_end":20},"name":"TooManyExtlangs","qualname":"::Error::TooManyExtlangs","value":"Error::TooManyExtlangs","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" At maximum three extlangs are allowed, but zero to one extlangs are preferred.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":86},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2737,"byte_end":2742,"line_start":79,"line_end":79,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"Error::{DuplicateExtension, EmptyExtension, EmptyPrivateUse, ForbiddenChar, InvalidSubtag, InvalidLanguage, SubtagTooLong, TooManyExtlangs}","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":69}],"decl_id":null,"docs":" Defines an Error type for langtags.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2728,"byte_end":3469,"line_start":79,"line_end":96,"column_start":1,"column_end":2}}]},{"kind":"Type","id":{"krate":0,"index":40},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4474,"byte_end":4480,"line_start":120,"line_end":120,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type used for this library.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":42},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4567,"byte_end":4580,"line_start":123,"line_end":123,"column_start":11,"column_end":24},"name":"GRANDFATHERED","qualname":"::GRANDFATHERED","value":"[(&'static str, Option<&'static str>); 26]","parent":null,"children":[],"decl_id":null,"docs":" Contains all grandfathered tags.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12377,"byte_end":12388,"line_start":221,"line_end":221,"column_start":12,"column_end":23},"name":"LanguageTag","qualname":"::LanguageTag","value":"LanguageTag { language, extlangs, script, region, variants, extensions, privateuse }","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":83}],"decl_id":null,"docs":" A language tag as described in [BCP47](http://tools.ietf.org/html/bcp47).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":71},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12539,"byte_end":12547,"line_start":224,"line_end":224,"column_start":9,"column_end":17},"name":"language","qualname":"::LanguageTag::language","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Language subtags are used to indicate the language, ignoring all\n other aspects such as script, region or spefic invariants.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":73},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12826,"byte_end":12834,"line_start":229,"line_end":229,"column_start":9,"column_end":17},"name":"extlangs","qualname":"::LanguageTag::extlangs","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Extended language subtags are used to identify certain specially\n selected languages that, for various historical and compatibility\n reasons, are closely identified with or tagged using an existing\n primary language subtag.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":75},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13023,"byte_end":13029,"line_start":233,"line_end":233,"column_start":9,"column_end":15},"name":"script","qualname":"::LanguageTag::script","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Script subtags are used to indicate the script or writing system\n variations that distinguish the written forms of a language or its\n dialects.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":77},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13574,"byte_end":13580,"line_start":241,"line_end":241,"column_start":9,"column_end":15},"name":"region","qualname":"::LanguageTag::region","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Region subtags are used to indicate linguistic variations associated\n with or appropriate to a specific country, territory, or region.\n Typically, a region subtag is used to indicate variations such as\n regional dialects or usage, or region-specific spelling conventions.\n It can also be used to indicate that content is expressed in a way\n that is appropriate for use throughout a region, for instance,\n Spanish content tailored to be useful throughout Latin America.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":79},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13794,"byte_end":13802,"line_start":245,"line_end":245,"column_start":9,"column_end":17},"name":"variants","qualname":"::LanguageTag::variants","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Variant subtags are used to indicate additional, well-recognized\n variations that define a language or its dialects that are not\n covered by other available subtags.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":81},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14110,"byte_end":14120,"line_start":250,"line_end":250,"column_start":9,"column_end":19},"name":"extensions","qualname":"::LanguageTag::extensions","value":"std::collections::BTreeMap<u8, std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Extensions provide a mechanism for extending language tags for use in\n various applications.  They are intended to identify information that\n is commonly used in association with languages or language tags but\n that is not part of language identification.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":83},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14299,"byte_end":14309,"line_start":253,"line_end":253,"column_start":9,"column_end":19},"name":"privateuse","qualname":"::LanguageTag::privateuse","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Private use subtags are used to indicate distinctions in language\n that are important in a given context by private agreement.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15757,"byte_end":15764,"line_start":286,"line_end":286,"column_start":12,"column_end":19},"name":"matches","qualname":"<LanguageTag>::matches","value":"fn (&self, other: &LanguageTag) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Matches language tags. The first language acts as a language range, the second one is used\n as a normal language tag. None fields in the language range are ignored. If the language\n tag has more extlangs than the range these extlangs are ignored. Matches are\n case-insensitive. `*` in language ranges are represented using `None` values. The language\n range `*` that matches language tags is created by the default language tag:\n `let wildcard: LanguageTag = Default::default();.`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16662,"byte_end":16679,"line_start":306,"line_end":306,"column_start":12,"column_end":29},"name":"is_language_range","qualname":"<LanguageTag>::is_language_range","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if it is a language range, meaning that there are no extension and privateuse tags.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17355,"byte_end":17367,"line_start":322,"line_end":322,"column_start":12,"column_end":24},"name":"canonicalize","qualname":"<LanguageTag>::canonicalize","value":"fn (&self) -> LanguageTag","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical version of the language tag.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3491,"byte_end":3496,"line_start":98,"line_end":98,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4310,"byte_end":4315,"line_start":113,"line_end":113,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14332,"byte_end":14343,"line_start":256,"line_end":256,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":56},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18915,"byte_end":18926,"line_start":363,"line_end":363,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22494,"byte_end":22505,"line_start":447,"line_end":447,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23546,"byte_end":23557,"line_start":476,"line_end":476,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3491,"byte_end":3496,"line_start":98,"line_end":98,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":86},"to":{"krate":1,"index":2388}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4310,"byte_end":4315,"line_start":113,"line_end":113,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":86},"to":{"krate":2,"index":7720}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14332,"byte_end":14343,"line_start":256,"line_end":256,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18915,"byte_end":18926,"line_start":363,"line_end":363,"column_start":20,"column_end":31},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":100},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22494,"byte_end":22505,"line_start":447,"line_end":447,"column_start":28,"column_end":39},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":100},"to":{"krate":2,"index":6602}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,97,110,103,117,97,103,101,45,116,97,103,115,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23546,"byte_end":23557,"line_start":476,"line_end":476,"column_start":23,"column_end":34},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":100},"to":{"krate":2,"index":7720}}]}