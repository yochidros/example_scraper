{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"markup5ever","disambiguator":[9688210091314166935,9899753039613061671]},"crate_root":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2","external_crates":[{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":1,"id":{"name":"std","disambiguator":[11381577622635992493,17547473659604595133]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":2,"id":{"name":"core","disambiguator":[18108793355192929380,16468545247463735764]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11904953375042280309,14371983540252725821]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[1355694319277426326,16064730418872223952]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[16554292665456805706,897773524803637406]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9247162154814293369,8568939183132890470]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10008762999642871283,544601977840758240]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[15792583605743683862,4433965399607837619]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[10940074420694136997,2824510269351905908]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":10,"id":{"name":"string_cache","disambiguator":[14568456058087831920,297678320628717623]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":11,"id":{"name":"lazy_static","disambiguator":[11931186607903619540,3075899825614713296]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":12,"id":{"name":"debug_unreachable","disambiguator":[6697378086305105016,2217332359181710345]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":13,"id":{"name":"unreachable","disambiguator":[10886175182798881382,13814524209468270033]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":14,"id":{"name":"void","disambiguator":[7504896077167939168,9019978804592468803]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":15,"id":{"name":"phf_shared","disambiguator":[8787078988611979107,5752934132453335837]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":16,"id":{"name":"siphasher","disambiguator":[7794810670545133687,3171846764117487825]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":17,"id":{"name":"unicase","disambiguator":[12216969413000535002,1204026841902131551]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":18,"id":{"name":"precomputed_hash","disambiguator":[7745100716943851463,2156667798463535226]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":19,"id":{"name":"serde","disambiguator":[7673339162440453681,9393987985529779569]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":20,"id":{"name":"string_cache_shared","disambiguator":[2546291336767361477,8265378895302566288]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":21,"id":{"name":"phf","disambiguator":[3958061031745666782,3265454838748679627]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":22,"id":{"name":"tendril","disambiguator":[471304267520367061,14201228218717910311]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":23,"id":{"name":"mac","disambiguator":[11950338450010824724,3891470819210495244]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":24,"id":{"name":"futf","disambiguator":[13441040407813110368,2134721001937179769]}},{"file_name":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","num":25,"id":{"name":"utf8","disambiguator":[1635844548153701131,13191502146956204020]}}],"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,108,105,98,46,114,115],"byte_start":436,"byte_end":3604,"line_start":10,"line_end":118,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":104},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5550,"byte_end":5560,"line_start":14,"line_end":14,"column_start":30,"column_end":40},"name":"NodeOrText","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":27},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5562,"byte_end":5572,"line_start":14,"line_end":14,"column_start":42,"column_end":52},"name":"AppendNode","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5574,"byte_end":5584,"line_start":14,"line_end":14,"column_start":54,"column_end":64},"name":"AppendText","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":106},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5586,"byte_end":5600,"line_start":14,"line_end":14,"column_start":66,"column_end":80},"name":"create_element","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":496},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5602,"byte_end":5614,"line_start":14,"line_end":14,"column_start":82,"column_end":94},"name":"ElementFlags","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":448},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5646,"byte_end":5656,"line_start":15,"line_end":15,"column_start":30,"column_end":40},"name":"QuirksMode","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":135},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5658,"byte_end":5664,"line_start":15,"line_end":15,"column_start":42,"column_end":48},"name":"Quirks","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5666,"byte_end":5679,"line_start":15,"line_end":15,"column_start":50,"column_end":63},"name":"LimitedQuirks","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":139},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5681,"byte_end":5689,"line_start":15,"line_end":15,"column_start":65,"column_end":73},"name":"NoQuirks","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":108},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5721,"byte_end":5729,"line_start":16,"line_end":16,"column_start":30,"column_end":38},"name":"TreeSink","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5731,"byte_end":5737,"line_start":16,"line_end":16,"column_start":40,"column_end":46},"name":"Tracer","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":472},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5739,"byte_end":5754,"line_start":16,"line_end":16,"column_start":48,"column_end":63},"name":"NextParserState","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":27},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10220,"byte_end":10230,"line_start":20,"line_end":20,"column_start":28,"column_end":38},"name":"AppendNode","value":"","parent":{"krate":0,"index":74}},{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10232,"byte_end":10242,"line_start":20,"line_end":20,"column_start":40,"column_end":50},"name":"AppendText","value":"","parent":{"krate":0,"index":74}},{"kind":"Use","ref_id":{"krate":0,"index":135},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10272,"byte_end":10278,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"name":"Quirks","value":"","parent":{"krate":0,"index":74}},{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10280,"byte_end":10293,"line_start":21,"line_end":21,"column_start":36,"column_end":49},"name":"LimitedQuirks","value":"","parent":{"krate":0,"index":74}},{"kind":"Use","ref_id":{"krate":0,"index":139},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10295,"byte_end":10303,"line_start":21,"line_end":21,"column_start":51,"column_end":59},"name":"NoQuirks","value":"","parent":{"krate":0,"index":74}},{"kind":"Use","ref_id":{"krate":0,"index":179},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":37567,"byte_end":37574,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"name":"FromSet","value":"","parent":{"krate":0,"index":338}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":37576,"byte_end":37586,"line_start":26,"line_end":26,"column_start":36,"column_end":46},"name":"NotFromSet","value":"","parent":{"krate":0,"index":338}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,108,105,98,46,114,115],"byte_start":1271,"byte_end":1272,"line_start":47,"line_end":47,"column_start":15,"column_end":16},"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,108,105,98,46,114,115],"byte_start":1294,"byte_end":1306,"line_start":48,"line_end":48,"column_start":21,"column_end":33},"name":"ExpandedName","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":502},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,108,105,98,46,114,115],"byte_start":1308,"byte_end":1316,"line_start":48,"line_end":48,"column_start":35,"column_end":43},"name":"QualName","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":542},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,108,105,98,46,114,115],"byte_start":1318,"byte_end":1327,"line_start":48,"line_end":48,"column_start":45,"column_end":54},"name":"Attribute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":590},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,108,105,98,46,114,115],"byte_start":1358,"byte_end":1370,"line_start":49,"line_end":49,"column_start":29,"column_end":41},"name":"SmallCharSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,108,105,98,46,114,115],"byte_start":436,"byte_end":3604,"line_start":10,"line_end":118,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":14},{"krate":0,"index":20},{"krate":0,"index":172},{"krate":0,"index":302},{"krate":0,"index":328},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":384}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":386},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,121,111,99,104,105,111,47,114,117,115,116,47,101,120,97,109,112,108,101,95,115,99,97,112,101,47,114,108,115,47,100,101,98,117,103,47,98,117,105,108,100,47,109,97,114,107,117,112,53,101,118,101,114,45,52,50,55,50,101,51,48,101,99,99,54,98,53,54,100,51,47,111,117,116,47,103,101,110,101,114,97,116,101,100,46,114,115],"byte_start":7820367,"byte_end":7820376,"line_start":1,"line_end":1,"column_start":10,"column_end":19},"name":"LocalName","qualname":"::LocalName","value":"::string_cache::Atom<LocalNameStaticSet>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":388},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,121,111,99,104,105,111,47,114,117,115,116,47,101,120,97,109,112,108,101,95,115,99,97,112,101,47,114,108,115,47,100,101,98,117,103,47,98,117,105,108,100,47,109,97,114,107,117,112,53,101,118,101,114,45,52,50,55,50,101,51,48,101,99,99,54,98,53,54,100,51,47,111,117,116,47,103,101,110,101,114,97,116,101,100,46,114,115],"byte_start":7820439,"byte_end":7820457,"line_start":2,"line_end":2,"column_start":12,"column_end":30},"name":"LocalNameStaticSet","qualname":"::LocalNameStaticSet","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":400},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,121,111,99,104,105,111,47,114,117,115,116,47,101,120,97,109,112,108,101,95,115,99,97,112,101,47,114,108,115,47,100,101,98,117,103,47,98,117,105,108,100,47,109,97,114,107,117,112,53,101,118,101,114,45,52,50,55,50,101,51,48,101,99,99,54,98,53,54,100,51,47,111,117,116,47,103,101,110,101,114,97,116,101,100,46,114,115],"byte_start":7994025,"byte_end":7994031,"line_start":2195,"line_end":2195,"column_start":11,"column_end":17},"name":"Prefix","qualname":"::Prefix","value":"::string_cache::Atom<PrefixStaticSet>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":402},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,121,111,99,104,105,111,47,114,117,115,116,47,101,120,97,109,112,108,101,95,115,99,97,112,101,47,114,108,115,47,100,101,98,117,103,47,98,117,105,108,100,47,109,97,114,107,117,112,53,101,118,101,114,45,52,50,55,50,101,51,48,101,99,99,54,98,53,54,100,51,47,111,117,116,47,103,101,110,101,114,97,116,101,100,46,114,115],"byte_start":7994091,"byte_end":7994106,"line_start":2196,"line_end":2196,"column_start":12,"column_end":27},"name":"PrefixStaticSet","qualname":"::PrefixStaticSet","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":414},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,121,111,99,104,105,111,47,114,117,115,116,47,101,120,97,109,112,108,101,95,115,99,97,112,101,47,114,108,115,47,100,101,98,117,103,47,98,117,105,108,100,47,109,97,114,107,117,112,53,101,118,101,114,45,52,50,55,50,101,51,48,101,99,99,54,98,53,54,100,51,47,111,117,116,47,103,101,110,101,114,97,116,101,100,46,114,115],"byte_start":7995633,"byte_end":7995642,"line_start":2215,"line_end":2215,"column_start":11,"column_end":20},"name":"Namespace","qualname":"::Namespace","value":"::string_cache::Atom<NamespaceStaticSet>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":416},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,121,111,99,104,105,111,47,114,117,115,116,47,101,120,97,109,112,108,101,95,115,99,97,112,101,47,114,108,115,47,100,101,98,117,103,47,98,117,105,108,100,47,109,97,114,107,117,112,53,101,118,101,114,45,52,50,55,50,101,51,48,101,99,99,54,98,53,54,100,51,47,111,117,116,47,103,101,110,101,114,97,116,101,100,46,114,115],"byte_start":7995705,"byte_end":7995723,"line_start":2216,"line_end":2216,"column_start":12,"column_end":30},"name":"NamespaceStaticSet","qualname":"::NamespaceStaticSet","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,100,97,116,97,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"data","qualname":"::data","value":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/data/mod.rs","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":430}],"decl_id":null,"docs":" Data that is known at compile-time and hard-coded into the binary.\n","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":18},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,100,97,116,97,47,109,111,100,46,114,115],"byte_start":4303,"byte_end":4318,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"C1_REPLACEMENTS","qualname":"::data::C1_REPLACEMENTS","value":"[Option<char>; 32]","parent":null,"children":[],"decl_id":null,"docs":" The spec replaces most characters in the ISO-2022 C1 control code range\n (U+0080 through U+009F) with these characters, based on Windows 8-bit\n codepages.\n","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":430},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,121,111,99,104,105,111,47,114,117,115,116,47,101,120,97,109,112,108,101,95,115,99,97,112,101,47,114,108,115,47,100,101,98,117,103,47,98,117,105,108,100,47,109,97,114,107,117,112,53,101,118,101,114,45,52,50,55,50,101,51,48,101,99,99,54,98,53,54,100,51,47,111,117,116,47,110,97,109,101,100,95,101,110,116,105,116,105,101,115,46,114,115],"byte_start":7998391,"byte_end":7998405,"line_start":13,"line_end":13,"column_start":12,"column_end":26},"name":"NAMED_ENTITIES","qualname":"::data::NAMED_ENTITIES","value":"Map<&'static str, (u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" A map of entity names to their codepoints. The second codepoint will\n be 0 if the entity contains a single codepoint. Entities have their preceeding '&' removed.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":20},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"interface","qualname":"::interface","value":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/interface/mod.rs","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":34},{"krate":0,"index":46},{"krate":0,"index":56},{"krate":0,"index":432},{"krate":0,"index":446},{"krate":0,"index":442},{"krate":0,"index":438},{"krate":0,"index":434},{"krate":0,"index":64},{"krate":0,"index":68},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":502},{"krate":0,"index":536},{"krate":0,"index":532},{"krate":0,"index":520},{"krate":0,"index":516},{"krate":0,"index":512},{"krate":0,"index":508},{"krate":0,"index":504},{"krate":0,"index":166},{"krate":0,"index":542},{"krate":0,"index":572},{"krate":0,"index":568},{"krate":0,"index":556},{"krate":0,"index":552},{"krate":0,"index":548},{"krate":0,"index":544}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,108,105,98,46,114,115],"byte_start":1125,"byte_end":1137,"line_start":39,"line_end":39,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":432},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5854,"byte_end":5866,"line_start":20,"line_end":20,"column_start":12,"column_end":24},"name":"ExpandedName","qualname":"::interface::ExpandedName","value":"ExpandedName { ns, local }","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":121}],"decl_id":null,"docs":" https://www.w3.org/TR/REC-xml-names/#dt-expname\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5843,"byte_end":5931,"line_start":20,"line_end":23,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":119},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5881,"byte_end":5883,"line_start":21,"line_end":21,"column_start":9,"column_end":11},"name":"ns","qualname":"::interface::ExpandedName::ns","value":"&'a string_cache::Atom<NamespaceStaticSet>","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":121},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5908,"byte_end":5913,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"name":"local","qualname":"::interface::ExpandedName::local","value":"&'a string_cache::Atom<LocalNameStaticSet>","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":74},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tree_builder","qualname":"::interface::tree_builder","value":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/interface/tree_builder.rs","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":90},{"krate":0,"index":96},{"krate":0,"index":104},{"krate":0,"index":448},{"krate":0,"index":468},{"krate":0,"index":464},{"krate":0,"index":462},{"krate":0,"index":458},{"krate":0,"index":454},{"krate":0,"index":450},{"krate":0,"index":472},{"krate":0,"index":492},{"krate":0,"index":488},{"krate":0,"index":486},{"krate":0,"index":482},{"krate":0,"index":478},{"krate":0,"index":474},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":160}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":27},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10520,"byte_end":10530,"line_start":28,"line_end":28,"column_start":5,"column_end":15},"name":"AppendNode","qualname":"::interface::tree_builder::NodeOrText::AppendNode","value":"NodeOrText::AppendNode(Handle)","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":31},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10544,"byte_end":10554,"line_start":29,"line_end":29,"column_start":5,"column_end":15},"name":"AppendText","qualname":"::interface::tree_builder::NodeOrText::AppendText","value":"NodeOrText::AppendText(StrTendril)","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":104},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10495,"byte_end":10505,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"name":"NodeOrText","qualname":"::interface::tree_builder::NodeOrText","value":"NodeOrText::{AppendNode, AppendText}","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":31}],"decl_id":null,"docs":" Something which can be inserted into the DOM.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":135},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10678,"byte_end":10684,"line_start":35,"line_end":35,"column_start":5,"column_end":11},"name":"Quirks","qualname":"::interface::tree_builder::QuirksMode::Quirks","value":"QuirksMode::Quirks","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":137},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10690,"byte_end":10703,"line_start":36,"line_end":36,"column_start":5,"column_end":18},"name":"LimitedQuirks","qualname":"::interface::tree_builder::QuirksMode::LimitedQuirks","value":"QuirksMode::LimitedQuirks","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":139},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10709,"byte_end":10717,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"NoQuirks","qualname":"::interface::tree_builder::QuirksMode::NoQuirks","value":"QuirksMode::NoQuirks","parent":{"krate":0,"index":448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":448},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10661,"byte_end":10671,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"name":"QuirksMode","qualname":"::interface::tree_builder::QuirksMode","value":"QuirksMode::{Quirks, LimitedQuirks, NoQuirks}","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":139}],"decl_id":null,"docs":" A document's quirks mode.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10652,"byte_end":10720,"line_start":34,"line_end":38,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10652,"byte_end":10720,"line_start":34,"line_end":38,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":143},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10995,"byte_end":11002,"line_start":46,"line_end":46,"column_start":5,"column_end":12},"name":"Suspend","qualname":"::interface::tree_builder::NextParserState::Suspend","value":"NextParserState::Suspend","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Stop further parsing.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":145},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":11048,"byte_end":11056,"line_start":48,"line_end":48,"column_start":5,"column_end":13},"name":"Continue","qualname":"::interface::tree_builder::NextParserState::Continue","value":"NextParserState::Continue","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" Continue without interruptions.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":472},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10943,"byte_end":10958,"line_start":44,"line_end":44,"column_start":10,"column_end":25},"name":"NextParserState","qualname":"::interface::tree_builder::NextParserState","value":"NextParserState::{Suspend, Continue}","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":145}],"decl_id":null,"docs":" Whether to interrupt further parsing of the current input until\n the next explicit resumption of the tokenizer, or continue without\n any interruption.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10934,"byte_end":11059,"line_start":44,"line_end":49,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":10934,"byte_end":11059,"line_start":44,"line_end":49,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":496},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":11091,"byte_end":11103,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"ElementFlags","qualname":"::interface::tree_builder::ElementFlags","value":"ElementFlags { template, mathml_annotation_xml_integration_point }","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":153}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":149},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":11320,"byte_end":11328,"line_start":57,"line_end":57,"column_start":9,"column_end":17},"name":"template","qualname":"::interface::tree_builder::ElementFlags::template","value":"bool","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" A document fragment should be created, associated with the element,\n and returned in TreeSink::get_template_contents","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":151},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":11558,"byte_end":11597,"line_start":63,"line_end":63,"column_start":9,"column_end":48},"name":"mathml_annotation_xml_integration_point","qualname":"::interface::tree_builder::ElementFlags::mathml_annotation_xml_integration_point","value":"bool","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" This boolean should be recorded with the element and returned\n in TreeSink::is_mathml_annotation_xml_integration_point","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":106},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":11633,"byte_end":11647,"line_start":68,"line_end":68,"column_start":8,"column_end":22},"name":"create_element","qualname":"::interface::tree_builder::create_element","value":"fn <Sink> (sink: &mut Sink, name: QualName, attrs: Vec<Attribute>) -> Sink::Handle","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":108},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":12393,"byte_end":12401,"line_start":88,"line_end":88,"column_start":11,"column_end":19},"name":"TreeSink","qualname":"::interface::tree_builder::TreeSink","value":"TreeSink","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":110},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":12581,"byte_end":12587,"line_start":92,"line_end":92,"column_start":10,"column_end":16},"name":"Handle","qualname":"::interface::tree_builder::TreeSink::Handle","value":"type Handle: Clone;","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" `Handle` is a reference to a DOM node.  The tree builder requires\n that a `Handle` implements `Clone` to get another reference to\n the same node.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":112},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":12796,"byte_end":12802,"line_start":98,"line_end":98,"column_start":10,"column_end":16},"name":"Output","qualname":"::interface::tree_builder::TreeSink::Output","value":"type Output;","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" The overall result of parsing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":13082,"byte_end":13088,"line_start":105,"line_end":105,"column_start":8,"column_end":14},"name":"finish","qualname":"::interface::tree_builder::TreeSink::finish","value":"fn (self) -> Self::Output","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Consume this sink and return the overall result of parsing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":13150,"byte_end":13161,"line_start":108,"line_end":108,"column_start":8,"column_end":19},"name":"parse_error","qualname":"::interface::tree_builder::TreeSink::parse_error","value":"fn (&mut self, msg: Cow<'static, str>) -> ()","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Signal a parse error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":13251,"byte_end":13263,"line_start":111,"line_end":111,"column_start":8,"column_end":20},"name":"get_document","qualname":"::interface::tree_builder::TreeSink::get_document","value":"fn (&mut self) -> Self::Handle","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Get a handle to the `Document` node.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":13435,"byte_end":13444,"line_start":117,"line_end":117,"column_start":8,"column_end":17},"name":"elem_name","qualname":"::interface::tree_builder::TreeSink::elem_name","value":"fn <'a> (&'a self, target: &'a Self::Handle) -> ExpandedName<'a>","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" What is the name of this element?","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":13908,"byte_end":13922,"line_start":126,"line_end":126,"column_start":8,"column_end":22},"name":"create_element","qualname":"::interface::tree_builder::TreeSink::create_element","value":"fn (&mut self, name: QualName, attrs: Vec<Attribute>, flags: ElementFlags) -> Self::Handle","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Create an element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":14072,"byte_end":14086,"line_start":130,"line_end":130,"column_start":8,"column_end":22},"name":"create_comment","qualname":"::interface::tree_builder::TreeSink::create_comment","value":"fn (&mut self, text: StrTendril) -> Self::Handle","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Create a comment node.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":14187,"byte_end":14196,"line_start":133,"line_end":133,"column_start":8,"column_end":17},"name":"create_pi","qualname":"::interface::tree_builder::TreeSink::create_pi","value":"fn (&mut self, target: StrTendril, data: StrTendril) -> Self::Handle","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Create a Processing Instruction node.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":14501,"byte_end":14507,"line_start":140,"line_end":140,"column_start":8,"column_end":14},"name":"append","qualname":"::interface::tree_builder::TreeSink::append","value":"fn (&mut self, parent: &Self::Handle, child: NodeOrText<Self::Handle>) -> ()","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Append a node as the last child of the given node.  If this would\n produce adjacent sibling text nodes, it should concatenate the text\n instead.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":14844,"byte_end":14871,"line_start":145,"line_end":145,"column_start":8,"column_end":35},"name":"append_based_on_parent_node","qualname":"::interface::tree_builder::TreeSink::append_based_on_parent_node","value":"fn (&mut self, element: &Self::Handle, prev_element: &Self::Handle, child: NodeOrText<Self::Handle>) -> ()","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" When the insertion point is decided by the existence of a parent node of the\n element, we consider both possibilities and send the element which will be used\n if a parent node exists, along with the element to be used if there isn't one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":15061,"byte_end":15087,"line_start":151,"line_end":151,"column_start":8,"column_end":34},"name":"append_doctype_to_document","qualname":"::interface::tree_builder::TreeSink::append_doctype_to_document","value":"fn (&mut self, name: StrTendril, public_id: StrTendril, system_id: StrTendril) -> ()","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Append a `DOCTYPE` element to the `Document` node.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":15327,"byte_end":15354,"line_start":157,"line_end":157,"column_start":8,"column_end":35},"name":"mark_script_already_started","qualname":"::interface::tree_builder::TreeSink::mark_script_already_started","value":"fn (&mut self, _node: &Self::Handle) -> ()","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Mark a HTML `<script>` as \"already started\".\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":15471,"byte_end":15474,"line_start":160,"line_end":160,"column_start":8,"column_end":11},"name":"pop","qualname":"::interface::tree_builder::TreeSink::pop","value":"fn (&mut self, _node: &Self::Handle) -> ()","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Indicate that a node was popped off the stack of open elements.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":15688,"byte_end":15709,"line_start":165,"line_end":165,"column_start":8,"column_end":29},"name":"get_template_contents","qualname":"::interface::tree_builder::TreeSink::get_template_contents","value":"fn (&mut self, target: &Self::Handle) -> Self::Handle","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Get a handle to a template's template contents. The tree builder\n promises this will never be called with something else than\n a template element.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":15816,"byte_end":15825,"line_start":168,"line_end":168,"column_start":8,"column_end":17},"name":"same_node","qualname":"::interface::tree_builder::TreeSink::same_node","value":"fn (&self, x: &Self::Handle, y: &Self::Handle) -> bool","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Do two handles refer to the same node?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":15926,"byte_end":15941,"line_start":171,"line_end":171,"column_start":8,"column_end":23},"name":"set_quirks_mode","qualname":"::interface::tree_builder::TreeSink::set_quirks_mode","value":"fn (&mut self, mode: QuirksMode) -> ()","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Set the document's quirks mode.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":16446,"byte_end":16467,"line_start":181,"line_end":181,"column_start":8,"column_end":29},"name":"append_before_sibling","qualname":"::interface::tree_builder::TreeSink::append_before_sibling","value":"fn (&mut self, sibling: &Self::Handle, new_node: NodeOrText<Self::Handle>) -> ()","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Append a node as the sibling immediately before the given node.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":16765,"byte_end":16785,"line_start":188,"line_end":188,"column_start":8,"column_end":28},"name":"add_attrs_if_missing","qualname":"::interface::tree_builder::TreeSink::add_attrs_if_missing","value":"fn (&mut self, target: &Self::Handle, attrs: Vec<Attribute>) -> ()","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Add each attribute to the given element, if no attribute with that name\n already exists. The tree builder promises this will never be called\n with something else than an element.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":16928,"byte_end":16947,"line_start":191,"line_end":191,"column_start":8,"column_end":27},"name":"associate_with_form","qualname":"::interface::tree_builder::TreeSink::associate_with_form","value":"fn (&mut self, _target: &Self::Handle, _form: &Self::Handle, _nodes: (&Self::Handle, Option<&Self::Handle>)) -> ()","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Associate the given form-associatable element with the form element\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":17135,"byte_end":17153,"line_start":197,"line_end":197,"column_start":8,"column_end":26},"name":"remove_from_parent","qualname":"::interface::tree_builder::TreeSink::remove_from_parent","value":"fn (&mut self, target: &Self::Handle) -> ()","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Detach the given node from its parent.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":17270,"byte_end":17287,"line_start":200,"line_end":200,"column_start":8,"column_end":25},"name":"reparent_children","qualname":"::interface::tree_builder::TreeSink::reparent_children","value":"fn (&mut self, node: &Self::Handle, new_parent: &Self::Handle) -> ()","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Remove all the children from node and append them to new_parent.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":17473,"byte_end":17515,"line_start":204,"line_end":204,"column_start":8,"column_end":50},"name":"is_mathml_annotation_xml_integration_point","qualname":"::interface::tree_builder::TreeSink::is_mathml_annotation_xml_integration_point","value":"fn (&self, _handle: &Self::Handle) -> bool","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Returns true if the adjusted current node is an HTML integration point\n and the token is a start tag.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":17634,"byte_end":17650,"line_start":209,"line_end":209,"column_start":8,"column_end":24},"name":"set_current_line","qualname":"::interface::tree_builder::TreeSink::set_current_line","value":"fn (&mut self, _line_number: u64) -> ()","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Called whenever the line number changes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":17746,"byte_end":17761,"line_start":212,"line_end":212,"column_start":8,"column_end":23},"name":"complete_script","qualname":"::interface::tree_builder::TreeSink::complete_script","value":"fn (&mut self, _node: &Self::Handle) -> NextParserState","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Indicate that a `script` element is complete.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":160},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":17914,"byte_end":17920,"line_start":218,"line_end":218,"column_start":11,"column_end":17},"name":"Tracer","qualname":"::interface::tree_builder::Tracer","value":"Tracer","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":164}],"decl_id":null,"docs":" Trace hooks for a garbage-collected DOM.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":162},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":17932,"byte_end":17938,"line_start":219,"line_end":219,"column_start":10,"column_end":16},"name":"Handle","qualname":"::interface::tree_builder::Tracer::Handle","value":"type Handle;","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,116,114,101,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":18074,"byte_end":18086,"line_start":223,"line_end":223,"column_start":8,"column_end":20},"name":"trace_handle","qualname":"::interface::tree_builder::Tracer::trace_handle","value":"fn (&self, node: &Self::Handle) -> ()","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" Upon a call to `trace_handles`, the tree builder will call this method\n for each handle in its internal state.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":502},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":7915,"byte_end":7923,"line_start":105,"line_end":105,"column_start":12,"column_end":20},"name":"QualName","qualname":"::interface::QualName","value":"QualName { prefix, ns, local }","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":159}],"decl_id":null,"docs":" A name with a namespace.\n Fully qualified name. Used to depict names of tags and attributes.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":7904,"byte_end":8008,"line_start":105,"line_end":109,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":155},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":7934,"byte_end":7940,"line_start":106,"line_end":106,"column_start":9,"column_end":15},"name":"prefix","qualname":"::interface::QualName::prefix","value":"std::option::Option<string_cache::Atom<PrefixStaticSet>>","parent":{"krate":0,"index":502},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":157},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":7966,"byte_end":7968,"line_start":107,"line_end":107,"column_start":9,"column_end":11},"name":"ns","qualname":"::interface::QualName::ns","value":"string_cache::Atom<NamespaceStaticSet>","parent":{"krate":0,"index":502},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":159},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":7989,"byte_end":7994,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"name":"local","qualname":"::interface::QualName::local","value":"string_cache::Atom<LocalNameStaticSet>","parent":{"krate":0,"index":502},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":8051,"byte_end":8054,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"new","qualname":"<QualName>::new","value":"fn (prefix: Option<Prefix>, ns: Namespace, local: LocalName) -> QualName","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":8030,"byte_end":8039,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":8261,"byte_end":8269,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"expanded","qualname":"<QualName>::expanded","value":"fn (&self) -> ExpandedName","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":8240,"byte_end":8249,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":542},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":8706,"byte_end":8715,"line_start":137,"line_end":137,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::interface::Attribute","value":"Attribute { name, value }","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":165}],"decl_id":null,"docs":" A tag attribute.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":8695,"byte_end":8770,"line_start":137,"line_end":140,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":163},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":8726,"byte_end":8730,"line_start":138,"line_end":138,"column_start":9,"column_end":13},"name":"name","qualname":"::interface::Attribute::name","value":"interface::QualName","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":165},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":8750,"byte_end":8755,"line_start":139,"line_end":139,"column_start":9,"column_end":14},"name":"value","qualname":"::interface::Attribute::value","value":"tendril::Tendril<tendril::fmt::UTF8>","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":172},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rcdom","qualname":"::rcdom","value":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/rcdom.rs","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":294},{"krate":0,"index":298}],"decl_id":null,"docs":" A simple reference-counted DOM.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":43},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":19268,"byte_end":19276,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"Document","qualname":"::rcdom::NodeData::Document","value":"NodeData::Document","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" The `Document` itself.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":45},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":19340,"byte_end":19347,"line_start":40,"line_end":40,"column_start":5,"column_end":12},"name":"Doctype","qualname":"::rcdom::NodeData::Doctype","value":"NodeData::Doctype { name, public_id, system_id }","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" A `DOCTYPE` with name, public id, and system id.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":53},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":19471,"byte_end":19475,"line_start":47,"line_end":47,"column_start":5,"column_end":9},"name":"Text","qualname":"::rcdom::NodeData::Text","value":"NodeData::Text { contents }","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" A text node.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":57},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":19548,"byte_end":19555,"line_start":52,"line_end":52,"column_start":5,"column_end":12},"name":"Comment","qualname":"::rcdom::NodeData::Comment","value":"NodeData::Comment { contents }","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" A comment.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":61},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":19636,"byte_end":19643,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"name":"Element","qualname":"::rcdom::NodeData::Element","value":"NodeData::Element { name, attrs, template_contents, mathml_annotation_xml_integration_point }","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" An element with attributes.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":71},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":20065,"byte_end":20086,"line_start":70,"line_end":70,"column_start":5,"column_end":26},"name":"ProcessingInstruction","qualname":"::rcdom::NodeData::ProcessingInstruction","value":"NodeData::ProcessingInstruction { target, contents }","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" A Processing instruction.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":230},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":19222,"byte_end":19230,"line_start":35,"line_end":35,"column_start":10,"column_end":18},"name":"NodeData","qualname":"::rcdom::NodeData","value":"NodeData::{Document, Doctype, Text, Comment, Element, ProcessingInstruction}","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":53},{"krate":0,"index":57},{"krate":0,"index":61},{"krate":0,"index":71}],"decl_id":null,"docs":" The different kinds of nodes in the DOM.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":232},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":20184,"byte_end":20188,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"Node","qualname":"::rcdom::Node","value":"Node { parent, children, data }","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81}],"decl_id":null,"docs":" A DOM node.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":77},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":20220,"byte_end":20226,"line_start":79,"line_end":79,"column_start":9,"column_end":15},"name":"parent","qualname":"::rcdom::Node::parent","value":"std::cell::Cell<std::option::Option<std::rc::Weak<rcdom::Node>>>","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" Parent node.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":79},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":20296,"byte_end":20304,"line_start":81,"line_end":81,"column_start":9,"column_end":17},"name":"children","qualname":"::rcdom::Node::children","value":"std::cell::RefCell<std::vec::Vec<std::rc::Rc<rcdom::Node>>>","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" Child nodes of this node.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":81},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":20373,"byte_end":20377,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"name":"data","qualname":"::rcdom::Node::data","value":"rcdom::NodeData","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" Represents this node's data.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":238},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":20679,"byte_end":20685,"line_start":98,"line_end":98,"column_start":10,"column_end":16},"name":"Handle","qualname":"::rcdom::Handle","value":"Rc<Node>","parent":null,"children":[],"decl_id":null,"docs":" Reference to a DOM node.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":240},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":20768,"byte_end":20778,"line_start":101,"line_end":101,"column_start":10,"column_end":20},"name":"WeakHandle","qualname":"::rcdom::WeakHandle","value":"Weak<Node>","parent":null,"children":[],"decl_id":null,"docs":" Weak reference to a DOM node, used for parent pointers.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":250},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":22236,"byte_end":22241,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"RcDom","qualname":"::rcdom::RcDom","value":"RcDom { document, errors, quirks_mode }","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89}],"decl_id":null,"docs":" The DOM itself; the result of parsing.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":85},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":22283,"byte_end":22291,"line_start":147,"line_end":147,"column_start":9,"column_end":17},"name":"document","qualname":"::rcdom::RcDom::document","value":"std::rc::Rc<rcdom::Node>","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" The `Document` itself.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":87},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":22355,"byte_end":22361,"line_start":150,"line_end":150,"column_start":9,"column_end":15},"name":"errors","qualname":"::rcdom::RcDom::errors","value":"std::vec::Vec<std::borrow::Cow<'static, str>>","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" Errors that occurred during parsing.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":89},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":22432,"byte_end":22443,"line_start":153,"line_end":153,"column_start":9,"column_end":20},"name":"quirks_mode","qualname":"::rcdom::RcDom::quirks_mode","value":"interface::tree_builder::QuirksMode","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" The document's quirks mode.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":302},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serialize","qualname":"::serialize","value":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/serialize.rs","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":578},{"krate":0,"index":586},{"krate":0,"index":580},{"krate":0,"index":308},{"krate":0,"index":312},{"krate":0,"index":326}],"decl_id":null,"docs":" Traits for serializing elements. The serializer expects the data to be xml-like (with a name,\n and optional children, attrs, text, comments, doctypes, and [processing instructions]). It uses\n the visitor pattern, where the serializer and the serializable objects are decoupled and\n implement their own traits.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":169},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":31463,"byte_end":31474,"line_start":24,"line_end":24,"column_start":5,"column_end":16},"name":"IncludeNode","qualname":"::serialize::TraversalScope::IncludeNode","value":"TraversalScope::IncludeNode","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Include the parent node when serializing.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":171},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":31794,"byte_end":31806,"line_start":31,"line_end":31,"column_start":5,"column_end":17},"name":"ChildrenOnly","qualname":"::serialize::TraversalScope::ChildrenOnly","value":"TraversalScope::ChildrenOnly(Option<QualName>)","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Only serialize the children of the node, treating any provided qualified name as the\n parent while serializing.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":578},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":31392,"byte_end":31406,"line_start":22,"line_end":22,"column_start":10,"column_end":24},"name":"TraversalScope","qualname":"::serialize::TraversalScope","value":"TraversalScope::{IncludeNode, ChildrenOnly}","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":171}],"decl_id":null,"docs":" Used as a parameter to `serialize`, telling it if we want to skip the parent.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":308},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":31948,"byte_end":31957,"line_start":36,"line_end":36,"column_start":11,"column_end":20},"name":"Serialize","qualname":"::serialize::Serialize","value":"Serialize","parent":null,"children":[{"krate":0,"index":310}],"decl_id":null,"docs":" Types that can be serialized (according to the xml-like scheme in `Serializer`) implement this\n trait.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":32121,"byte_end":32130,"line_start":39,"line_end":39,"column_start":8,"column_end":17},"name":"serialize","qualname":"::serialize::Serialize::serialize","value":"fn <S> (&self, serializer: &mut S, traversal_scope: TraversalScope) -> io::Result<()>","parent":{"krate":0,"index":308},"children":[],"decl_id":null,"docs":" Take the serializer and call its methods to serialize this type. The type will dictate\n which methods are called and with what parameters.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":312},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":32313,"byte_end":32323,"line_start":44,"line_end":44,"column_start":11,"column_end":21},"name":"Serializer","qualname":"::serialize::Serializer","value":"Serializer","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324}],"decl_id":null,"docs":" Types that are capable of serializing implement this trait\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":32410,"byte_end":32420,"line_start":46,"line_end":46,"column_start":8,"column_end":18},"name":"start_elem","qualname":"::serialize::Serializer::start_elem","value":"fn <'a, AttrIter> (&mut self, name: QualName, attrs: AttrIter) -> io::Result<()>","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Serialize the start of an element, for example `<div class=\"test\">`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":32616,"byte_end":32624,"line_start":50,"line_end":50,"column_start":8,"column_end":16},"name":"end_elem","qualname":"::serialize::Serializer::end_elem","value":"fn (&mut self, name: QualName) -> io::Result<()>","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Serialize the end of an element, for example `</div>`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":32716,"byte_end":32726,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"write_text","qualname":"::serialize::Serializer::write_text","value":"fn (&mut self, text: &str) -> io::Result<()>","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Serialize a plain text node.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":32843,"byte_end":32856,"line_start":56,"line_end":56,"column_start":8,"column_end":21},"name":"write_comment","qualname":"::serialize::Serializer::write_comment","value":"fn (&mut self, text: &str) -> io::Result<()>","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Serialize a comment node, for example `<!-- comment -->`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":32972,"byte_end":32985,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"write_doctype","qualname":"::serialize::Serializer::write_doctype","value":"fn (&mut self, name: &str) -> io::Result<()>","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Serialize a doctype node, for example `<!doctype html>`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":33160,"byte_end":33188,"line_start":63,"line_end":63,"column_start":8,"column_end":36},"name":"write_processing_instruction","qualname":"::serialize::Serializer::write_processing_instruction","value":"fn (&mut self, target: &str, data: &str) -> io::Result<()>","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Serialize a processing instruction node, for example\n `<?xml-stylesheet type=\"text/xsl\" href=\"style.xsl\"?>`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":326},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,115,101,114,105,97,108,105,122,101,46,114,115],"byte_start":33649,"byte_end":33656,"line_start":73,"line_end":73,"column_start":10,"column_end":17},"name":"AttrRef","qualname":"::serialize::AttrRef","value":"(&'a QualName, &'a str)","parent":null,"children":[],"decl_id":null,"docs":" A type alias for an attribute name and value (e.g. the `class=\"test\"` in `<div class=\"test\">`\n is represented as `(<QualName of type class>, \"test\")`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":330},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,115,109,97,108,108,99,104,97,114,115,101,116,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"smallcharset","qualname":"::util::smallcharset","value":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/util/smallcharset.rs","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":612},{"krate":0,"index":608},{"krate":0,"index":602},{"krate":0,"index":598},{"krate":0,"index":596},{"krate":0,"index":592},{"krate":0,"index":332}],"decl_id":null,"docs":" This module contains a single struct [`SmallCharSet`]. See its documentation for details.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":590},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,115,109,97,108,108,99,104,97,114,115,101,116,46,114,115],"byte_start":34492,"byte_end":34504,"line_start":20,"line_end":20,"column_start":12,"column_end":24},"name":"SmallCharSet","qualname":"::util::smallcharset::SmallCharSet","value":"SmallCharSet { bits }","parent":null,"children":[{"krate":0,"index":175}],"decl_id":null,"docs":" Represents a set of \"small characters\", those with Unicode scalar\n values less than 64.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,115,109,97,108,108,99,104,97,114,115,101,116,46,114,115],"byte_start":34481,"byte_end":34527,"line_start":20,"line_end":22,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,115,109,97,108,108,99,104,97,114,115,101,116,46,114,115],"byte_start":34481,"byte_end":34527,"line_start":20,"line_end":22,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":175},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,115,109,97,108,108,99,104,97,114,115,101,116,46,114,115],"byte_start":34515,"byte_end":34519,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"bits","qualname":"::util::smallcharset::SmallCharSet::bits","value":"u64","parent":{"krate":0,"index":590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,115,109,97,108,108,99,104,97,114,115,101,116,46,114,115],"byte_start":35775,"byte_end":35795,"line_start":59,"line_end":59,"column_start":12,"column_end":32},"name":"nonmember_prefix_len","qualname":"<SmallCharSet>::nonmember_prefix_len","value":"fn (&self, buf: &str) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Count the number of bytes of characters at the beginning of `buf` which are not in the set.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":338},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer_queue","qualname":"::util::buffer_queue","value":"/Users/yochio/.cargo/registry/src/github.com-1ecc6299db9ec823/markup5ever-0.7.2/util/buffer_queue.rs","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":350},{"krate":0,"index":616},{"krate":0,"index":626},{"krate":0,"index":622},{"krate":0,"index":618},{"krate":0,"index":352},{"krate":0,"index":354}],"decl_id":null,"docs":" The `BufferQueue` struct and helper types.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":179},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":38002,"byte_end":38009,"line_start":37,"line_end":37,"column_start":5,"column_end":12},"name":"FromSet","qualname":"::util::buffer_queue::SetResult::FromSet","value":"SetResult::FromSet(char)","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" A character from the `SmallCharSet`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":183},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":38095,"byte_end":38105,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"NotFromSet","qualname":"::util::buffer_queue::SetResult::NotFromSet","value":"SetResult::NotFromSet(StrTendril)","parent":{"krate":0,"index":616},"children":[],"decl_id":null,"docs":" A string buffer containing no characters from the `SmallCharSet`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":616},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":37941,"byte_end":37950,"line_start":35,"line_end":35,"column_start":10,"column_end":19},"name":"SetResult","qualname":"::util::buffer_queue::SetResult","value":"SetResult::{FromSet, NotFromSet}","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":183}],"decl_id":null,"docs":" Result from [`pop_except_from`] containing either a character from a [`SmallCharSet`], or a\n string buffer of characters not from the set.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":37932,"byte_end":38120,"line_start":35,"line_end":40,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":352},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":38386,"byte_end":38397,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"BufferQueue","qualname":"::util::buffer_queue::BufferQueue","value":"BufferQueue {  }","parent":null,"children":[{"krate":0,"index":107}],"decl_id":null,"docs":" A queue of owned string buffers, which supports incrementally consuming characters.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":38547,"byte_end":38550,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<BufferQueue>::new","value":"fn () -> BufferQueue","parent":null,"children":[],"decl_id":null,"docs":" Create an empty BufferQueue.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":38526,"byte_end":38535,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":38728,"byte_end":38736,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BufferQueue>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the queue is empty.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":38707,"byte_end":38716,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":38872,"byte_end":38881,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"pop_front","qualname":"<BufferQueue>::pop_front","value":"fn (&mut self) -> Option<StrTendril>","parent":null,"children":[],"decl_id":null,"docs":" Get the buffer at the beginning of the queue.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":38851,"byte_end":38860,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":39080,"byte_end":39090,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"push_front","qualname":"<BufferQueue>::push_front","value":"fn (&mut self, buf: StrTendril) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a buffer to the beginning of the queue.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":39343,"byte_end":39352,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"push_back","qualname":"<BufferQueue>::push_back","value":"fn (&mut self, buf: StrTendril) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a buffer to the end of the queue.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":39591,"byte_end":39595,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"peek","qualname":"<BufferQueue>::peek","value":"fn (&self) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":" Look at the next available character without removing it, if the queue is not empty.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":40049,"byte_end":40053,"line_start":103,"line_end":103,"column_start":12,"column_end":16},"name":"next","qualname":"<BufferQueue>::next","value":"fn (&mut self) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":" Get the next character if one is available, removing it from the queue.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":41780,"byte_end":41795,"line_start":146,"line_end":146,"column_start":12,"column_end":27},"name":"pop_except_from","qualname":"<BufferQueue>::pop_except_from","value":"fn (&mut self, set: SmallCharSet) -> Option<SetResult>","parent":null,"children":[],"decl_id":null,"docs":" Pops and returns either a single character from the given set, or\n a buffer of characters none of which are in the set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":43548,"byte_end":43551,"line_start":196,"line_end":196,"column_start":12,"column_end":15},"name":"eat","qualname":"<BufferQueue>::eat","value":"fn <F> (&mut self, pat: &str, eq: F) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Consume bytes matching the pattern, using a custom comparison function `eq`.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,121,111,99,104,105,111,47,114,117,115,116,47,101,120,97,109,112,108,101,95,115,99,97,112,101,47,114,108,115,47,100,101,98,117,103,47,98,117,105,108,100,47,109,97,114,107,117,112,53,101,118,101,114,45,52,50,55,50,101,51,48,101,99,99,54,98,53,54,100,51,47,111,117,116,47,103,101,110,101,114,97,116,101,100,46,114,115],"byte_start":7820502,"byte_end":7820520,"line_start":3,"line_end":3,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,121,111,99,104,105,111,47,114,117,115,116,47,101,120,97,109,112,108,101,95,115,99,97,112,101,47,114,108,115,47,100,101,98,117,103,47,98,117,105,108,100,47,109,97,114,107,117,112,53,101,118,101,114,45,52,50,55,50,101,51,48,101,99,99,54,98,53,54,100,51,47,111,117,116,47,103,101,110,101,114,97,116,101,100,46,114,115],"byte_start":7994151,"byte_end":7994166,"line_start":2197,"line_end":2197,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,121,111,99,104,105,111,47,114,117,115,116,47,101,120,97,109,112,108,101,95,115,99,97,112,101,47,114,108,115,47,100,101,98,117,103,47,98,117,105,108,100,47,109,97,114,107,117,112,53,101,118,101,114,45,52,50,55,50,101,51,48,101,99,99,54,98,53,54,100,51,47,111,117,116,47,103,101,110,101,114,97,116,101,100,46,114,115],"byte_start":7995768,"byte_end":7995786,"line_start":2217,"line_end":2217,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5978,"byte_end":5990,"line_start":25,"line_end":25,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":6140,"byte_end":6152,"line_start":31,"line_end":31,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":8015,"byte_end":8023,"line_start":111,"line_end":111,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":20397,"byte_end":20401,"line_start":86,"line_end":86,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":22478,"byte_end":22483,"line_start":156,"line_end":156,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":28318,"byte_end":28323,"line_start":328,"line_end":328,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":28538,"byte_end":28544,"line_start":338,"line_end":338,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,115,109,97,108,108,99,104,97,114,115,101,116,46,114,115],"byte_start":34534,"byte_end":34546,"line_start":24,"line_end":24,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":38471,"byte_end":38482,"line_start":52,"line_end":52,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,108,105,98,46,114,115],"byte_start":1119,"byte_end":1123,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,108,105,98,46,114,115],"byte_start":1146,"byte_end":1155,"line_start":39,"line_end":39,"column_start":22,"column_end":31},"ref_id":{"krate":0,"index":20}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":6747,"byte_end":6759,"line_start":57,"line_end":57,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":74}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,108,105,98,46,114,115],"byte_start":1165,"byte_end":1170,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":172}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,108,105,98,46,114,115],"byte_start":1180,"byte_end":1189,"line_start":41,"line_end":41,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":302}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,108,105,98,46,114,115],"byte_start":1214,"byte_end":1226,"line_start":43,"line_end":43,"column_start":13,"column_end":25},"ref_id":{"krate":0,"index":330}},{"kind":"Mod","span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,108,105,98,46,114,115],"byte_start":1240,"byte_end":1252,"line_start":44,"line_end":44,"column_start":13,"column_end":25},"ref_id":{"krate":0,"index":338}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,121,111,99,104,105,111,47,114,117,115,116,47,101,120,97,109,112,108,101,95,115,99,97,112,101,47,114,108,115,47,100,101,98,117,103,47,98,117,105,108,100,47,109,97,114,107,117,112,53,101,118,101,114,45,52,50,55,50,101,51,48,101,99,99,54,98,53,54,100,51,47,111,117,116,47,103,101,110,101,114,97,116,101,100,46,114,115],"byte_start":7820502,"byte_end":7820520,"line_start":3,"line_end":3,"column_start":43,"column_end":61},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":388},"to":{"krate":10,"index":124}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,121,111,99,104,105,111,47,114,117,115,116,47,101,120,97,109,112,108,101,95,115,99,97,112,101,47,114,108,115,47,100,101,98,117,103,47,98,117,105,108,100,47,109,97,114,107,117,112,53,101,118,101,114,45,52,50,55,50,101,51,48,101,99,99,54,98,53,54,100,51,47,111,117,116,47,103,101,110,101,114,97,116,101,100,46,114,115],"byte_start":7994151,"byte_end":7994166,"line_start":2197,"line_end":2197,"column_start":43,"column_end":58},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":402},"to":{"krate":10,"index":124}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,121,111,99,104,105,111,47,114,117,115,116,47,101,120,97,109,112,108,101,95,115,99,97,112,101,47,114,108,115,47,100,101,98,117,103,47,98,117,105,108,100,47,109,97,114,107,117,112,53,101,118,101,114,45,52,50,55,50,101,51,48,101,99,99,54,98,53,54,100,51,47,111,117,116,47,103,101,110,101,114,97,116,101,100,46,114,115],"byte_start":7995768,"byte_end":7995786,"line_start":2217,"line_end":2217,"column_start":43,"column_end":61},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":416},"to":{"krate":10,"index":124}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":5978,"byte_end":5990,"line_start":25,"line_end":25,"column_start":46,"column_end":58},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":432},"to":{"krate":2,"index":2418}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":6140,"byte_end":6152,"line_start":31,"line_end":31,"column_start":25,"column_end":37},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":432},"to":{"krate":2,"index":7716}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,105,110,116,101,114,102,97,99,101,47,109,111,100,46,114,115],"byte_start":8015,"byte_end":8023,"line_start":111,"line_end":111,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":20397,"byte_end":20401,"line_start":86,"line_end":86,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":22478,"byte_end":22483,"line_start":156,"line_end":156,"column_start":19,"column_end":24},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":250},"to":{"krate":0,"index":108}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":28318,"byte_end":28323,"line_start":328,"line_end":328,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":250},"to":{"krate":2,"index":2640}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,114,99,100,111,109,46,114,115],"byte_start":28538,"byte_end":28544,"line_start":338,"line_end":338,"column_start":20,"column_end":26},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":238},"to":{"krate":0,"index":308}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,115,109,97,108,108,99,104,97,114,115,101,116,46,114,115],"byte_start":34534,"byte_end":34546,"line_start":24,"line_end":24,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,121,111,99,104,105,111,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,97,114,107,117,112,53,101,118,101,114,45,48,46,55,46,50,47,117,116,105,108,47,98,117,102,102,101,114,95,113,117,101,117,101,46,114,115],"byte_start":38471,"byte_end":38482,"line_start":52,"line_end":52,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":352},"to":{"krate":4294967295,"index":4294967295}}]}